name: 'Admin Panel CMS Frontend'
on:
  push:
    branches:
      - main
    paths:
      - packages/cms/**
      - package-lock.json
      - sst.config.ts
      - package.json
      - .github/workflows/cms.yml
  pull_request:
    paths:
      - packages/cms/**
      - package-lock.json
      - sst.config.ts
      - package.json
      - .github/workflows/cms.yml

env:
  CI: true

jobs:
  # Run all unit tests on merge to main
  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node_modules-${{hashFiles('package-lock.json')}}
          restore-keys: node_modules- # Take any latest cache if failed to find it for current yarn.lock
      - run: npm ci
      - if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: NPM Logs
          path: /home/runner/.npm/_logs/
      - run: npm test -w packages/cms

  e2e:
    name: E2E Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node_modules-${{hashFiles('package-lock.json')}}
          restore-keys: node_modules- # Take any latest cache if failed to find it for current yarn.lock
      - run: npm ci
      - if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: NPM Logs
          path: /home/runner/.npm/_logs/
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - run: npm run test:e2e -w packages/cms
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  lint:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node_modules-${{hashFiles('package-lock.json')}}
          restore-keys: node_modules- # Take any latest cache if failed to find it for current yarn.lock
      - run: npm ci
      - if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: NPM Logs
          path: /home/runner/.npm/_logs/
      - name: JavaScript and Typescript
        run: npm run lint -w packages/cms
      - name: Styles
        run: npm run lint:style -w packages/cms

  changelog:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    name: Changelog
    runs-on: ubuntu-latest
    outputs:
      releases_created: ${{ steps.tag-release.outputs.releases_created }}
    steps:
      - uses: GoogleCloudPlatform/release-please-action@v3
        id: tag-release
        with:
          path: packages/cms
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: node
          monorepo-tags: true
          package-name: bluelightcard/cms
          changelog-types: '[{"type":"feat","section":"Features","hidden":false},{"type":"fix","section":"Bug Fixes","hidden":false},{"type":"chore","section":"Other Changes","hidden":false},{"type":"refactor","section":"Other Changes","hidden":false}]'

  staging:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    name: Deploy Staging
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    needs:
      - test
      - lint
      - changelog
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node_modules-${{hashFiles('package-lock.json')}}
          restore-keys: node_modules- # Take any latest cache if failed to find it for current yarn.lock
      - run: npm ci
      - if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: NPM Logs
          path: /home/runner/.npm/_logs/
      - name: Build
        run: npm run build -w packages/cms
      - name: Publish
        uses: cloudflare/pages-action@1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: admin-panel-cms
          directory: packages/cms/dist
          branch: 'staging'
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

  release:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && needs.changelog.outputs.releases_created
    name: Deploy Production
    environment: Production
    runs-on: ubuntu-latest
    needs:
      - test
      - changelog
      - staging
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node_modules-${{hashFiles('package-lock.json')}}
          restore-keys: node_modules- # Take any latest cache if failed to find it for current yarn.lock
      - run: npm ci
      - if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: NPM Logs
          path: /home/runner/.npm/_logs/
      - name: Build
        run: npm run build -w packages/cms
      - name: Publish
        uses: cloudflare/pages-action@1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: admin-panel-cms
          directory: packages/cms/dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
