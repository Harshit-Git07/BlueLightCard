name: Deploy Identity to Production

on:
  workflow_call:
    inputs:
      commit_hash_or_tag:
        description: The commit SHA that you wish to revert to
        type: string
        default: 'main'

jobs:
  release-identity-to-production:
    name: Release to production
    environment: Production
    runs-on: ubuntu-latest
    strategy:
      matrix:
        deployment:
          - brand: BLC_UK
            region: eu-west-2
            stage: production
          - brand: BLC_AU
            region: ap-southeast-2
            stage: production
          - brand: DDS_UK
            region: eu-west-2
            stage: production-dds
            blcUkCognitoUserPoolId: 'eu-west-2_D3aAVuWHo'
            blcUkOldCognitoUserPoolId: 'eu-west-2_jrwTfFRgM'
            ddsCognitoUserPoolId: 'eu-west-2_3WlS5ZkAh'
            ddsOldCognitoUserPoolId: 'eu-west-2_y2KyCUbVT'
            blcUkIdentityApiId: 'ue8dcieh75'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.commit_hash_or_tag }}
      - name: Setup
        uses: ./.github/actions/setup
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Configure Prod AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ matrix.deployment.region }}
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE_PROD }}
      - name: Build
        run: npm run build
      - name: Get Service Tags
        run: |
          echo "DD_VERSION=$(date +%m-%d-%Y)-$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "DD_ENV=production" >> $GITHUB_ENV
          echo "DD_GIT_COMMIT_SHA=$(git rev-parse HEAD)" >> $GITHUB_ENV
          echo "DD_GIT_REPOSITORY_URL=https://github.com/${{ github.repository }}" >> $GITHUB_ENV
      - name: Deploy
        env:
          BRAND: ${{ matrix.deployment.brand }}
          BLC_UK_COGNITO_USER_POOL_ID: ${{ matrix.deployment.blcUkCognitoUserPoolId }}
          BLC_UK_OLD_COGNITO_USER_POOL_ID: ${{ matrix.deployment.blcUkOldCognitoUserPoolId }}
          DDS_COGNITO_USER_POOL_ID: ${{ matrix.deployment.ddsCognitoUserPoolId }}
          DDS_OLD_COGNITO_USER_POOL_ID: ${{ matrix.deployment.ddsOldCognitoUserPoolId }}
          BLC_UK_IDENTITY_API_ID: ${{ matrix.deployment.blcUkIdentityApiId }}
          DD_VERSION: '${{ env.DD_VERSION }}'
          DD_ENV: '${{ env.DD_ENV }}'
          DD_GIT_COMMIT_SHA: '${{ env.DD_GIT_COMMIT_SHA }}'
          DD_GIT_REPOSITORY_URL: '${{ env.DD_GIT_REPOSITORY_URL }}'
          DD_API_KEY: '${{ secrets.DATADOG_AWS_INSTRUMENTATION_TOKEN }}'
          USE_DATADOG_AGENT: 'true'
        run: npx sst deploy global --stage ${{matrix.deployment.stage}} --region ${{matrix.deployment.region}} && npx sst deploy identity --stage ${{matrix.deployment.stage}} --region ${{matrix.deployment.region}}
      - name: Datadog deployment metrics
        uses: ./.github/actions/datadog
        with:
          environment: 'production'
          service_name: 'identity'
          workflow_run_id: ${{ github.run_id }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DATADOG_DORA_METRICS_CLIENT_TOKEN: ${{ secrets.DATADOG_DORA_METRICS_CLIENT_TOKEN }}
      - name: Send Slack message on failure
        if: ${{ failure() }}
        uses: bluelightcard/github-actions-slack-notification@v1
        with:
          webhook_url: ${{ secrets.CI_FAILURE_NOTIFICATIONS_WEBHOOK }}
          title: "@here :x: Production deployment failed for Identity (${{matrix.deployment.brand}})!"
      - name: Send Slack message on success
        if: ${{ success() }}
        uses: bluelightcard/github-actions-slack-notification@v1
        with:
          webhook_url: ${{ secrets.CI_SUCCESS_NOTIFICATIONS_WEBHOOK }}
          title: ":rocket: Production deployment for Identity was successful (${{matrix.deployment.brand}}})!"
