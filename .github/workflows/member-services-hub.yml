permissions:
  contents: write
  pull-requests: write
  id-token: write
  deployments: write

name: 'Member-Services-Hub'
on:
  push:
    paths:
      - packages/member-services-hub/**
      - package-lock.json
      - sst.config.ts
      - package.json
      - .github/workflows/member-services-hub.yml
  pull_request:
    paths:
      - packages/member-services-hub/**
      - package-lock.json
      - sst.config.ts
      - package.json
      - .github/workflows/member-services-hub.yml

env:
  PKG_NAME: member-services-hub
  STORYBOOK_PROJECT_NAME: admin-panel-storybook
  STORYBOOK_BUILD_OUTPUT: storybook-static

jobs:
  install:
    name: Install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
        with:
          restore_cache: false
          token: ${{ secrets.GITHUB_TOKEN }}

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
      - name: Run Unit Tests
        run: npm test -w packages/${{ env.PKG_NAME }}

  lint:
    name: Linting
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
      - name: JavaScript and Typescript
        run: npm run lint -w packages/${{ env.PKG_NAME }}
      - name: Styles
        run: npm run lint:style -w packages/${{ env.PKG_NAME }}

  storybook:
    name: Storybook Preview
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
      - name: Build
        run: npm run build-storybook -w packages/${{ env.PKG_NAME }}
      - name: Publish
        uses: cloudflare/pages-action@1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{ env.STORYBOOK_PROJECT_NAME }}
          directory: packages/${{ env.PKG_NAME }}/${{ env.STORYBOOK_BUILD_OUTPUT }}
          branch: ${{ github.ref_name }}
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

  changelog:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    name: Changelog
    runs-on: ubuntu-latest
    outputs:
      releases_created: ${{ steps.tag-release.outputs.releases_created }}
    steps:
      - uses: GoogleCloudPlatform/release-please-action@v3
        id: tag-release
        with:
          path: packages/${{ env.PKG_NAME }}
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: node
          monorepo-tags: true
          package-name: bluelightcard/${{ env.PKG_NAME }}
          changelog-types: '[{"type":"feat","section":"Features","hidden":false},{"type":"fix","section":"Bug Fixes","hidden":false},{"type":"chore","section":"Other Changes","hidden":false},{"type":"refactor","section":"Other Changes","hidden":false}]'

  pr-frontend:
    if: github.event_name == 'pull_request'
    name: Deploy member services hub Frontend for PR
    runs-on: ubuntu-latest
    outputs:
      url: ${{ steps.cloudflare-publish.outputs.url }}
    needs:
      - install
      - test
      - lint
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
      - name: Build
        run: npm run build -w packages/member-services-hub
      - name: Publish
        uses: cloudflare/pages-action@1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: member-services-hub
          directory: packages/member-services-hub/dist
          branch: ${{ github.ref_name }}
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

  staging:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    name: Deploy Staging
    runs-on: ubuntu-latest
    needs:
      - install
      - test
      - lint
      - changelog
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
      - name: Build
        run: npm run build -w packages/${{ env.PKG_NAME }}
      - name: Publish
        uses: cloudflare/pages-action@1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{ env.PKG_NAME }}
          directory: packages/${{ env.PKG_NAME }}/dist
          branch: 'staging'
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

  release:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && needs.changelog.outputs.releases_created
    name: Deploy Production
    environment: Production
    runs-on: ubuntu-latest
    needs:
      - install
      - test
      - changelog
      - staging
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
      - name: Build
        run: npm run build -w packages/${{ env.PKG_NAME }}
      - name: Publish
        uses: cloudflare/pages-action@1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{ env.PKG_NAME }}
          branch: 'main'
          directory: packages/${{ env.PKG_NAME }}/dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
      - name: Record deployment with Oobeya
        run: |
          curl -XPOST -H 'Oobeya-API-Key: ${{ secrets.OOBEYA_API_KEY }}' -H "Content-type: application/json" -d '{
            "analysisId": "${{ secrets.OOBEYA_ANALYSIS_ID }}",
            "pipelineStartAt": "${{ github.event.push.pusher.date }}",
            "lastCommitSha": "${{ github.sha }}",
            "deploymentType": "RELEASE",
            "deployedAt": "${{ github.event.push.pusher.date }}",
            "author": "${{ github.actor }}",
            "name": "${{ needs.changelog.outputs.tag_name }}",
            "title": "${{ github.workflow }} ${{ needs.changelog.outputs.tag_name }}"
          }' 'https://bluelightcard.oobeya.io/apis/v1/deployments'
