// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`vaultCreatedHandler should map event data correctly for Eagle Eye vaults 1`] = `
"
    INSERT INTO "vaults" (
      "id",
      "redemptionId",
      "alertBelow",
      "status",
      "maxPerUser",
      "showQR",
      "terms",
      "email",
      "integration",
      "integrationId"
    )
    SELECT
      $1,
      "redemptions"."id",
      $2,
      $3,
      $4,
      $5,
      $6,
      $7,
      $8,
      $9
    FROM "redemptions"
    WHERE (
      "redemptions"."companyId" = $10
      AND "redemptions"."offerId" = $11
      AND "redemptions"."platform" = $12
    )
    RETURNING (
      "vaults"."id"
    )
  "
`;

exports[`vaultCreatedHandler should map event data correctly for Uniqodo vaults 1`] = `
"
    INSERT INTO "vaults" (
      "id",
      "redemptionId",
      "alertBelow",
      "status",
      "maxPerUser",
      "showQR",
      "terms",
      "email",
      "integration",
      "integrationId"
    )
    SELECT
      $1,
      "redemptions"."id",
      $2,
      $3,
      $4,
      $5,
      $6,
      $7,
      $8,
      $9
    FROM "redemptions"
    WHERE (
      "redemptions"."companyId" = $10
      AND "redemptions"."offerId" = $11
      AND "redemptions"."platform" = $12
    )
    RETURNING (
      "vaults"."id"
    )
  "
`;

exports[`vaultCreatedHandler should map event data correctly for active vaults 1`] = `
"
    INSERT INTO "vaults" (
      "id",
      "redemptionId",
      "alertBelow",
      "status",
      "maxPerUser",
      "showQR",
      "terms",
      "email",
      "integration",
      "integrationId"
    )
    SELECT
      $1,
      "redemptions"."id",
      $2,
      $3,
      $4,
      $5,
      $6,
      $7,
      $8,
      $9
    FROM "redemptions"
    WHERE (
      "redemptions"."companyId" = $10
      AND "redemptions"."offerId" = $11
      AND "redemptions"."platform" = $12
    )
    RETURNING (
      "vaults"."id"
    )
  "
`;

exports[`vaultCreatedHandler should map event data correctly for admin email 1`] = `
"
    INSERT INTO "vaults" (
      "id",
      "redemptionId",
      "alertBelow",
      "status",
      "maxPerUser",
      "showQR",
      "terms",
      "email",
      "integration",
      "integrationId"
    )
    SELECT
      $1,
      "redemptions"."id",
      $2,
      $3,
      $4,
      $5,
      $6,
      $7,
      $8,
      $9
    FROM "redemptions"
    WHERE (
      "redemptions"."companyId" = $10
      AND "redemptions"."offerId" = $11
      AND "redemptions"."platform" = $12
    )
    RETURNING (
      "vaults"."id"
    )
  "
`;

exports[`vaultCreatedHandler should map event data correctly for inactive vaults 1`] = `
"
    INSERT INTO "vaults" (
      "id",
      "redemptionId",
      "alertBelow",
      "status",
      "maxPerUser",
      "showQR",
      "terms",
      "email",
      "integration",
      "integrationId"
    )
    SELECT
      $1,
      "redemptions"."id",
      $2,
      $3,
      $4,
      $5,
      $6,
      $7,
      $8,
      $9
    FROM "redemptions"
    WHERE (
      "redemptions"."companyId" = $10
      AND "redemptions"."offerId" = $11
      AND "redemptions"."platform" = $12
    )
    RETURNING (
      "vaults"."id"
    )
  "
`;

exports[`vaultCreatedHandler should map event data correctly for missing admin email 1`] = `
"
    INSERT INTO "vaults" (
      "id",
      "redemptionId",
      "alertBelow",
      "status",
      "maxPerUser",
      "showQR",
      "terms",
      "email",
      "integration",
      "integrationId"
    )
    SELECT
      $1,
      "redemptions"."id",
      $2,
      $3,
      $4,
      $5,
      $6,
      $7,
      $8,
      $9
    FROM "redemptions"
    WHERE (
      "redemptions"."companyId" = $10
      AND "redemptions"."offerId" = $11
      AND "redemptions"."platform" = $12
    )
    RETURNING (
      "vaults"."id"
    )
  "
`;

exports[`vaultCreatedHandler should map event data correctly for passthrough fields 1`] = `
"
    INSERT INTO "vaults" (
      "id",
      "redemptionId",
      "alertBelow",
      "status",
      "maxPerUser",
      "showQR",
      "terms",
      "email",
      "integration",
      "integrationId"
    )
    SELECT
      $1,
      "redemptions"."id",
      $2,
      $3,
      $4,
      $5,
      $6,
      $7,
      $8,
      $9
    FROM "redemptions"
    WHERE (
      "redemptions"."companyId" = $10
      AND "redemptions"."offerId" = $11
      AND "redemptions"."platform" = $12
    )
    RETURNING (
      "vaults"."id"
    )
  "
`;

exports[`vaultCreatedHandler throws an error if the event is invalid because the \`adminEmail\` field is invalid 1`] = `
"[
  {
    "validation": "email",
    "code": "invalid_string",
    "message": "Invalid email",
    "path": [
      "detail",
      "adminEmail"
    ]
  }
]"
`;

exports[`vaultCreatedHandler throws an error if the event is invalid because the \`alertBelow\` field is invalid 1`] = `
"[
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "string",
    "path": [
      "detail",
      "alertBelow"
    ],
    "message": "Expected number, received string"
  }
]"
`;

exports[`vaultCreatedHandler throws an error if the event is invalid because the \`brand\` field is invalid 1`] = `
"[
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "number",
    "path": [
      "detail",
      "brand"
    ],
    "message": "Expected string, received number"
  }
]"
`;

exports[`vaultCreatedHandler throws an error if the event is invalid because the \`companyId\` field is invalid 1`] = `
"[
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "string",
    "path": [
      "detail",
      "companyId"
    ],
    "message": "Expected number, received string"
  }
]"
`;

exports[`vaultCreatedHandler throws an error if the event is invalid because the \`companyName\` field is invalid 1`] = `
"[
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "boolean",
    "path": [
      "detail",
      "companyName"
    ],
    "message": "Expected string, received boolean"
  }
]"
`;

exports[`vaultCreatedHandler throws an error if the event is invalid because the \`eeCampaignId\` field is invalid 1`] = `
"[
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "string",
    "path": [
      "detail",
      "eeCampaignId"
    ],
    "message": "Expected number, received string"
  }
]"
`;

exports[`vaultCreatedHandler throws an error if the event is invalid because the \`link\` field is invalid 1`] = `
"[
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "number",
    "path": [
      "detail",
      "link"
    ],
    "message": "Expected string, received number"
  }
]"
`;

exports[`vaultCreatedHandler throws an error if the event is invalid because the \`linkId\` field is invalid 1`] = `
"[
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "string",
    "path": [
      "detail",
      "linkId"
    ],
    "message": "Expected number, received string"
  }
]"
`;

exports[`vaultCreatedHandler throws an error if the event is invalid because the \`managerId\` field is invalid 1`] = `
"[
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "string",
    "path": [
      "detail",
      "managerId"
    ],
    "message": "Expected number, received string"
  }
]"
`;

exports[`vaultCreatedHandler throws an error if the event is invalid because the \`maxPerUser\` field is invalid 1`] = `
"[
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "string",
    "path": [
      "detail",
      "maxPerUser"
    ],
    "message": "Expected number, received string"
  }
]"
`;

exports[`vaultCreatedHandler throws an error if the event is invalid because the \`offerId\` field is invalid 1`] = `
"[
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "string",
    "path": [
      "detail",
      "offerId"
    ],
    "message": "Expected number, received string"
  }
]"
`;

exports[`vaultCreatedHandler throws an error if the event is invalid because the \`platform\` field is invalid 1`] = `
"[
  {
    "received": "BLC",
    "code": "invalid_enum_value",
    "options": [
      "BLC_UK",
      "BLC_AU",
      "DDS_UK"
    ],
    "path": [
      "detail",
      "platform"
    ],
    "message": "Invalid enum value. Expected 'BLC_UK' | 'BLC_AU' | 'DDS_UK', received 'BLC'"
  }
]"
`;

exports[`vaultCreatedHandler throws an error if the event is invalid because the \`showQR\` field is invalid 1`] = `
"[
  {
    "code": "invalid_type",
    "expected": "boolean",
    "received": "string",
    "path": [
      "detail",
      "showQR"
    ],
    "message": "Expected boolean, received string"
  }
]"
`;

exports[`vaultCreatedHandler throws an error if the event is invalid because the \`terms\` field is invalid 1`] = `
"[
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "boolean",
    "path": [
      "detail",
      "terms"
    ],
    "message": "Expected string, received boolean"
  }
]"
`;

exports[`vaultCreatedHandler throws an error if the event is invalid because the \`ucCampaignId\` field is invalid 1`] = `
"[
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "string",
    "path": [
      "detail",
      "ucCampaignId"
    ],
    "message": "Expected number, received string"
  }
]"
`;

exports[`vaultCreatedHandler throws an error if the event is invalid because the \`vaultStatus\` field is invalid 1`] = `
"[
  {
    "code": "invalid_type",
    "expected": "boolean",
    "received": "string",
    "path": [
      "detail",
      "vaultStatus"
    ],
    "message": "Expected boolean, received string"
  }
]"
`;

exports[`vaultCreatedHandler throws an error if the event is invalid because the event detail is an empty object 1`] = `
"[
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "undefined",
    "path": [
      "detail",
      "alertBelow"
    ],
    "message": "Required"
  },
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "undefined",
    "path": [
      "detail",
      "brand"
    ],
    "message": "Required"
  },
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "undefined",
    "path": [
      "detail",
      "companyId"
    ],
    "message": "Required"
  },
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "undefined",
    "path": [
      "detail",
      "companyName"
    ],
    "message": "Required"
  },
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "undefined",
    "path": [
      "detail",
      "maxPerUser"
    ],
    "message": "Required"
  },
  {
    "code": "invalid_type",
    "expected": "number",
    "received": "undefined",
    "path": [
      "detail",
      "offerId"
    ],
    "message": "Required"
  },
  {
    "expected": "'BLC_UK' | 'BLC_AU' | 'DDS_UK'",
    "received": "undefined",
    "code": "invalid_type",
    "path": [
      "detail",
      "platform"
    ],
    "message": "Required"
  },
  {
    "code": "invalid_type",
    "expected": "boolean",
    "received": "undefined",
    "path": [
      "detail",
      "showQR"
    ],
    "message": "Required"
  },
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "undefined",
    "path": [
      "detail",
      "terms"
    ],
    "message": "Required"
  },
  {
    "code": "invalid_type",
    "expected": "boolean",
    "received": "undefined",
    "path": [
      "detail",
      "vaultStatus"
    ],
    "message": "Required"
  }
]"
`;

exports[`vaultCreatedHandler throws an error if the event is invalid because the event is an empty object 1`] = `
"[
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "undefined",
    "path": [
      "account"
    ],
    "message": "Required"
  },
  {
    "code": "invalid_type",
    "expected": "object",
    "received": "undefined",
    "path": [
      "detail"
    ],
    "message": "Required"
  },
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "undefined",
    "path": [
      "detail-type"
    ],
    "message": "Required"
  },
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "undefined",
    "path": [
      "id"
    ],
    "message": "Required"
  },
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "undefined",
    "path": [
      "region"
    ],
    "message": "Required"
  },
  {
    "code": "invalid_type",
    "expected": "array",
    "received": "undefined",
    "path": [
      "resources"
    ],
    "message": "Required"
  },
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "undefined",
    "path": [
      "source"
    ],
    "message": "Required"
  },
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "undefined",
    "path": [
      "time"
    ],
    "message": "Required"
  },
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "undefined",
    "path": [
      "version"
    ],
    "message": "Required"
  }
]"
`;

exports[`vaultCreatedHandler throws an error if the event is invalid because the event is missing detail 1`] = `
"[
  {
    "code": "invalid_type",
    "expected": "object",
    "received": "undefined",
    "path": [
      "detail"
    ],
    "message": "Required"
  }
]"
`;

exports[`vaultCreatedHandler throws an error if the event is invalid because the event is missing time 1`] = `
"[
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "undefined",
    "path": [
      "time"
    ],
    "message": "Required"
  }
]"
`;

exports[`vaultCreatedHandler throws an error if the event is invalid because the event is null 1`] = `
"[
  {
    "code": "invalid_type",
    "expected": "object",
    "received": "null",
    "path": [],
    "message": "Expected object, received null"
  }
]"
`;

exports[`vaultCreatedHandler throws an error if the event is invalid because the event is undefined 1`] = `
"[
  {
    "code": "invalid_type",
    "expected": "object",
    "received": "undefined",
    "path": [],
    "message": "Required"
  }
]"
`;
