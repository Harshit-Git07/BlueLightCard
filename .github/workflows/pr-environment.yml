name: Pull Request Ephemeral Environment

on:
  pull_request:
    types: [labeled, synchronize]

permissions:
  contents: write
  pull-requests: write
  id-token: write
  deployments: write

env:
  PR_PREFIX: pr-${{ github.event.pull_request.number }}-blc-mono
  PR_PREFIX_DDS: pr-${{ github.event.pull_request.number }}-blc-mono-dds

jobs:
  install:
    name: Install
    runs-on: ubuntu-latest
    if: ${{ github.event.label.name == 'ready-for-test' || contains(github.event.pull_request.labels.*.name, 'ready-for-test')}}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
        with:
          restore_cache: false
          token: ${{ secrets.GITHUB_TOKEN }}

  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      backend-shared: ${{ steps.filter.outputs.backend-shared }}
      backend-offers: ${{ steps.filter.outputs.backend-offers }}
      backend-redemptions: ${{ steps.filter.outputs.backend-redemptions }}
      backend-discovery: ${{ steps.filter.outputs.backend-discovery }}
      frontend-web: ${{ steps.filter.outputs.frontend-web }}
    steps:
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            backend-shared:
              - packages/api/discovery/**
              - packages/api/offers/**
              - packages/api/redemptions/**
              - packages/api/identity/**
              - packages/api/core/**
              - stacks/**
              - .github/workflows/pr-environment.yml
              - package-lock.json
              - sst.config.ts
              - package.json
            backend-offers:
              - packages/api/offers/**
              - packages/api/core/**
              - stacks/**
              - .github/workflows/pr-environment.yml
              - package-lock.json
              - sst.config.ts
              - package.json
            backend-redemptions:
              - packages/api/redemptions/**
              - packages/api/core/**
              - stacks/**
              - .github/workflows/pr-environment.yml
              - package-lock.json
              - sst.config.ts
              - package.json
            backend-discovery:
              - packages/api/discovery/**
              - packages/api/core/**
              - stacks/**
              - .github/workflows/pr-environment.yml
              - package-lock.json
              - sst.config.ts
              - package.json
            frontend-web:
              - packages/web/**
              - packages/shared-ui/**
              - .github/workflows/pr-environment.yml
              - package-lock.json
              - package.json

  backend-shared:
    needs:
      - changes
      - install
    name: Deploy Backend for PR (global & identity)
    if: ${{ (needs.changes.outputs.backend-shared == 'true' || needs.changes.outputs.backend-discovery == 'true' || needs.changes.outputs.backend-offers == 'true' || needs.changes.outputs.backend-redemptions == 'true' ) && github.actor != 'dependabot[bot]'}}
    runs-on: ubuntu-latest
    outputs:
      identity-api-endpoint: ${{ steps.sst-identity-outputs.outputs.identityApiUrl }}
      identity-api-id: ${{ steps.sst-identity-outputs.outputs.identityApiId }}
      blc-uk-cognito-user-pool-id: ${{ steps.sst-identity-outputs.outputs.blcUkCognitoUserPoolId }}
      blc-uk-old-cognito-user-pool-id: ${{ steps.sst-identity-outputs.outputs.blcUkOldCognitoUserPoolId }}
      dds-cognito-user-pool-id: ${{ steps.sst-identity-outputs.outputs.ddsUkCognitoUserPoolId }}
      dds-old-cognito-user-pool-id: ${{ steps.sst-identity-outputs.outputs.ddsUkOldCognitoUserPoolId }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
      - name: Configure Non Prod AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::314658777488:role/github-actions-role
          aws-region: eu-west-2
      # TODO: Should the build be cached?
      - run: npm run build
      - name: Deploy Global
        env:
          BRAND: BLC_UK
        run: npx sst deploy global --stage $PR_PREFIX
      - name: Deploy Identity
        env:
          BRAND: BLC_UK
        run: npx sst deploy identity --stage $PR_PREFIX
      - name: Extract Identity URL
        id: sst-identity-outputs
        run: |
          cat .sst/outputs.json
          IDENTITY_URL=$(jq -r '.[].IdentityApiEndpoint | select(. != null)' .sst/outputs.json)
          BLC_UK_IDENTITY_API_ID=$(jq -r '.[].IdentityApiId | select(. != null)' .sst/outputs.json)
          BLC_UK_COGNITO_USER_POOL_ID=$(jq -r '.[].BlcUkCognitoUserPoolId | select(. != null)' .sst/outputs.json)
          BLC_UK_OLD_COGNITO_USER_POOL_ID=$(jq -r '.[].BlcUkOldCognitoUserPoolId | select(. != null)' .sst/outputs.json)
          DDS_COGNITO_USER_POOL_ID=$(jq -r '.[].DdsUkCognitoUserPoolId | select(. != null)' .sst/outputs.json)
          DDS_OLD_COGNITO_USER_POOL_ID=$(jq -r '.[].DdsUkOldCognitoUserPoolId | select(. != null)' .sst/outputs.json)
          echo "identityApiUrl=$IDENTITY_URL" >> $GITHUB_OUTPUT
          echo "identityApiId=$BLC_UK_IDENTITY_API_ID" >> $GITHUB_OUTPUT
          echo "blcUkCognitoUserPoolId=$BLC_UK_COGNITO_USER_POOL_ID" >> $GITHUB_OUTPUT
          echo "blcUkOldCognitoUserPoolId=$BLC_UK_OLD_COGNITO_USER_POOL_ID" >> $GITHUB_OUTPUT
          echo "ddsUkCognitoUserPoolId=$DDS_COGNITO_USER_POOL_ID" >> $GITHUB_OUTPUT
          echo "ddsUkOldCognitoUserPoolId=$DDS_OLD_COGNITO_USER_POOL_ID" >> $GITHUB_OUTPUT
      - name: Echo outputs
        run: |
          echo ${{ steps.sst-identity-outputs.outputs.identityApiUrl }}
          echo ${{ steps.sst-identity-outputs.outputs.identityApiId }}
          echo ${{ steps.sst-identity-outputs.outputs.blcUkCognitoUserPoolId }}
          echo ${{ steps.sst-identity-outputs.outputs.blcUkOldCognitoUserPoolId }}
          echo ${{ steps.sst-identity-outputs.outputs.ddsUkCognitoUserPoolId }}
          echo ${{ steps.sst-identity-outputs.outputs.ddsUkOldCognitoUserPoolId }}

  backend-shared-dds:
    needs:
      - changes
      - install
      - backend-shared
    name: Deploy DDS Backend for PR (global & identity)
    if: ${{ contains(github.event.pull_request.labels.*.name, 'ready-for-test') && contains(github.event.pull_request.labels.*.name, 'dds-ready-for-test')}}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
      - name: Configure Non Prod AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::314658777488:role/github-actions-role
          aws-region: eu-west-2
      - run: npm run build
      - name: Deploy DDS Global
        env:
          BRAND: DDS_UK
          BLC_UK_COGNITO_USER_POOL_ID: ${{ needs.backend-shared.outputs.blc-uk-cognito-user-pool-id }}
          BLC_UK_OLD_COGNITO_USER_POOL_ID: ${{ needs.backend-shared.outputs.blc-uk-old-cognito-user-pool-id }}
          DDS_COGNITO_USER_POOL_ID: ${{ needs.backend-shared.outputs.dds-cognito-user-pool-id }}
          DDS_OLD_COGNITO_USER_POOL_ID: ${{ needs.backend-shared.outputs.dds-old-cognito-user-pool-id }}
          BLC_UK_IDENTITY_API_ID: ${{ needs.backend-shared.outputs.identity-api-id }}
        run: npx sst deploy global --stage $PR_PREFIX_DDS
      - name: Deploy DDS Identity
        env:
          BRAND: DDS_UK
          BLC_UK_COGNITO_USER_POOL_ID: ${{ needs.backend-shared.outputs.blc-uk-cognito-user-pool-id }}
          BLC_UK_OLD_COGNITO_USER_POOL_ID: ${{ needs.backend-shared.outputs.blc-uk-old-cognito-user-pool-id }}
          DDS_COGNITO_USER_POOL_ID: ${{ needs.backend-shared.outputs.dds-cognito-user-pool-id }}
          DDS_OLD_COGNITO_USER_POOL_ID: ${{ needs.backend-shared.outputs.dds-old-cognito-user-pool-id }}
          BLC_UK_IDENTITY_API_ID: ${{ needs.backend-shared.outputs.identity-api-id }}
        run: npx sst deploy identity --stage $PR_PREFIX_DDS

  backend-offers:
    needs:
      - changes
      - install
      - backend-shared
    name: Deploy Backend for PR (offers)
    if: ${{ needs.changes.outputs.backend-offers == 'true' && github.actor != 'dependabot[bot]' }}
    runs-on: ubuntu-latest
    env:
      DEV_BASE_URL: http://localhost:8080
      LEGACY_API_RETRIEVE_OFFERS_ENDPOINT: api/4/offer/retrieve.php
      OFFERS_HOMEPAGE_MENU_BRAND_PREFIX: blc-uk
      CDN_URL: https://blcimg-dev.img.bluelightcard.co.uk
    outputs:
      offers-api-endpoint: ${{ steps.sst-offers-outputs.outputs.offersApiUrl }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
      - name: Configure Non Prod AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::314658777488:role/github-actions-role
          aws-region: eu-west-2
      - run: npm run build
      - name: Deploy Offers
        env:
          BRAND: BLC_UK
        run: npx sst deploy offers --stage $PR_PREFIX
      - name: Extract Api URL and set output
        id: sst-offers-outputs
        run: |
          cat .sst/outputs.json
          OFFERS_URL=$(jq -r '.[].OffersApiEndpoint | select(. != null)' .sst/outputs.json)
          echo "offersApiUrl=$OFFERS_URL" >> $GITHUB_OUTPUT
      - name: Echo outputs
        run: |
          echo ${{ steps.sst-offers-outputs.outputs.offersApiUrl }}

  backend-offers-dds:
    needs:
      - changes
      - install
      - backend-shared-dds
    name: Deploy DDS Backend for PR (offers)
    if: ${{ needs.changes.outputs.backend-offers == 'true' && github.actor != 'dependabot[bot]' && contains(github.event.pull_request.labels.*.name, 'ready-for-test') && contains(github.event.pull_request.labels.*.name, 'dds-ready-for-test')}}
    runs-on: ubuntu-latest
    env:
      DEV_BASE_URL: http://localhost:8080
      LEGACY_API_RETRIEVE_OFFERS_ENDPOINT: api/4/offer/retrieve.php
      OFFERS_HOMEPAGE_MENU_BRAND_PREFIX: dds-uk
      CDN_URL: https://ddsimgdev.s3.eu-west-2.amazonaws.com
    outputs:
      offers-api-endpoint: ${{ steps.sst-offers-dds-outputs.outputs.ddsOffersApiUrl }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
      - name: Configure Non Prod AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::314658777488:role/github-actions-role
          aws-region: eu-west-2
      - run: npm run build
      - name: Deploy Offers
        env:
          BRAND: BLC_UK
        run: npx sst deploy offers --stage $PR_PREFIX_DDS
      - name: Extract Api URL and set output
        id: sst-offers-dds-outputs
        run: |
          cat .sst/outputs.json
          DDS_OFFERS_URL=$(jq -r '.[].OffersApiEndpoint | select(. != null)' .sst/outputs.json)
          echo "ddsOffersApiUrl=$DDS_OFFERS_URL" >> $GITHUB_OUTPUT
      - name: Echo outputs
        run: |
          echo ${{ steps.sst-offers-dds-outputs.outputs.ddsOffersApiUrl }}

  backend-redemptions:
    needs:
      - changes
      - install
      - backend-shared
    name: Deploy Backend for PR (redemptions)
    if: ${{ needs.changes.outputs.backend-redemptions == 'true' && github.actor != 'dependabot[bot]' }}
    runs-on: ubuntu-latest
    outputs:
      redemptions-api-endpoint: ${{ steps.sst-redemptions-outputs.outputs.redemptionsApiUrl }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
      - name: Configure Non Prod AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::314658777488:role/github-actions-role
          aws-region: eu-west-2
      - run: npm run build
      - name: Deploy Redemptions
        env:
          BRAND: BLC_UK
        run: npx sst deploy redemptions --stage $PR_PREFIX
      - name: Extract Api URL and set output
        id: sst-redemptions-outputs
        run: |
          cat .sst/outputs.json
          REDEMPTION_URL=$(jq -r '.[].RedemptionsApiEndpoint | select(. != null)' .sst/outputs.json)
          echo "redemptionsApiUrl=$REDEMPTION_URL" >> $GITHUB_OUTPUT
      - name: Echo outputs
        run: |
          echo ${{ steps.sst-redemptions-outputs.outputs.redemptionsApiUrl }}

  backend-discovery:
    needs:
      - changes
      - install
      - backend-shared
    name: Deploy Backend for PR (discovery)
    if: ${{ needs.changes.outputs.backend-discovery == 'true' && github.actor != 'dependabot[bot]' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        region: ['eu-west-2']
    outputs:
      discovery-api-endpoint: ${{ steps.sst-discovery-outputs.outputs.discoveryApiUrl }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
      - name: Configure Non Prod AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::314658777488:role/github-actions-role
          aws-region: ${{matrix.region}}
      - run: npm run build
      - name: Deploy Discovery
        env:
          BRAND: BLC_UK
          OPENSEARCH_CREATE_NEW_DOMAIN: ${{ github.event.label.name == 'createNewOpenSearchDomain' && 'true' || 'false' }}
        run: npx sst deploy discovery --stage $PR_PREFIX --region ${{matrix.region}}
      - name: Extract Api URL and set output
        id: sst-discovery-outputs
        run: |
          cat .sst/outputs.json
          DISCOVERY_URL=$(jq -r '.[].DiscoveryApiEndpoint | select(. != null)' .sst/outputs.json)
          echo "discoveryApiUrl=$DISCOVERY_URL" >> $GITHUB_OUTPUT
      - name: Echo outputs
        run: |
          echo ${{ steps.sst-discovery-outputs.outputs.discoveryApiUrl }}

  # Deploy the frontend
  # Matrix Deployment for each brand does not allow dynamic outputs which is needed to be able to create the comment
  # By nesting the comment it allows us to be able to use the values within the matrix steps
  frontend:
    name: Deploy Frontend for PR ${{matrix.brand}}
    if: ${{ needs.changes.outputs.frontend-web == 'true' && github.actor != 'dependabot[bot]' }}
    needs:
      - changes
      - install
    environment: Staging
    strategy:
      matrix:
        include:
          - brand: 'blc-uk'
            identity_brand: 'blc_uk'
            identity_api_key: 'IDENTITY_EU_WEST_2_API_KEY'
            identity_api_url: 'https://staging-identity.blcshine.io'
            datadog_app_id: 'DATADOG_BLC_UK_APP_ID'
            datadog_client_token: 'DATADOG_BLC_UK_CLIENT_TOKEN'
            datadog_default_service: 'web'
            amplitude_deployment_key: 'BLC_UK_AMPLITUDE_DEPLOYMENT_KEY'
            cognito_client_id: 'BLC_UK_COGNITO_CLIENT_ID'
            cognito_client_secret: 'BLC_UK_COGNITO_CLIENT_SECRET'
            region: 'eu-west-2'
            offers_graphql_endpoint: 'https://w6cu72lyfngylgfvgjla66levi.appsync-api.eu-west-2.amazonaws.com/graphql'
            offers_api_gateway_endpoint: 'https://staging-offers.blcshine.io'
            offers_brand: 'blc-uk'
            zendesk_url: 'https://bluelightcard.zendesk.com/hc/en-gb/signin'
            # Brand Specific Variables needed for Seeding of QA Environment
            event_bus_name: staging-blc-mono-eventBus
            cognito_web_pool_client: eu-west-2_Ow2L8azIb
            stack_cognito_web_pool_client: cognitoNewUserPoolwebClient
          - brand: 'blc-au'
            identity_brand: 'blc_au'
            identity_api_key: 'IDENTITY_AP_SOUTHEAST_2_API_KEY'
            identity_api_url: 'https://staging-identity-au.blcshine.io'
            amplitude_deployment_key: 'BLC_AU_AMPLITUDE_DEPLOYMENT_KEY'
            cognito_client_id: 'BLC_AU_COGNITO_CLIENT_ID'
            cognito_client_secret: 'BLC_AU_COGNITO_CLIENT_SECRET'
            region: 'ap-southeast-2'
            offers_graphql_endpoint: 'https://nmgjfvhy5vdhjgngzxtuomgbdi.appsync-api.ap-southeast-2.amazonaws.com/graphql'
            offers_api_gateway_endpoint: 'https://staging-offers-au.blcshine.io'
            offers_brand: 'blc-aus'
            # Brand Specific Variables needed for Seeding of QA Environment
            event_bus_name: staging-blc-mono-eventBus
            cognito_web_pool_client: ap-southeast-2_CDHxjtsV3
            stack_cognito_web_pool_client: cognitoNewUserPoolwebClient
          - brand: 'dds-uk'
            identity_brand: 'dds_uk'
            identity_api_key: 'IDENTITY_EU_WEST_2_API_KEY'
            identity_api_url: 'https://staging-identity.blcshine.io'
            amplitude_deployment_key: 'DDS_UK_AMPLITUDE_DEPLOYMENT_KEY'
            cognito_client_id: 'DDS_UK_COGNITO_CLIENT_ID'
            cognito_client_secret: 'DDS_UK_COGNITO_CLIENT_SECRET'
            region: 'eu-west-2'
            offers_graphql_endpoint: 'https://whrpak5b7vgk5ccqwmsc5geltm.appsync-api.eu-west-2.amazonaws.com/graphql'
            offers_api_gateway_endpoint: 'https://staging-offers-dds-uk.blcshine.io'
            offers_brand: 'dds-uk'
            # Brand Specific Variables needed for Seeding of QA Environment
            event_bus_name: staging-blc-mono-eventBus
            cognito_web_pool_client: eu-west-2_VdsvVVUrI
            stack_cognito_web_pool_client: cognitoddsNewUserPoolwebClient
    runs-on: ubuntu-latest
    # TODO: Does this need to depend on the backend - it seems to be using the staging API...
    #   - backend-shared
    #   - backend-offers
    #   - backend-redemptions
    env:
      NEXT_PUBLIC_API_PROXY_URL: https://pr-api.bluelightcard.workers.dev
      NEXT_PUBLIC_AMPLITUDE_API_KEY: ${{ secrets.AMPLITUDE_API_KEY }}
      NEXT_PUBLIC_AMPLITUDE_DEPLOYMENT_KEY: ${{ secrets[matrix.amplitude_deployment_key] }}
      NEXT_PUBLIC_OFFERS_ENDPOINT: ${{matrix.offers_graphql_endpoint}}
      NEXT_PUBLIC_OFFERS_API_GATEWAY_ENDPOINT: ${{matrix.offers_api_gateway_endpoint}}
      NEXT_PUBLIC_OFFERS_BRAND: ${{matrix.offers_brand}}
      NEXT_PUBLIC_BLACK_FRIDAY_TIME_LOCK_START_DATE: '2023-11-14T01:00:00'
      NEXT_PUBLIC_BLACK_FRIDAY_TIME_LOCK_END_DATE: '2023-11-27T23:59:59'
      NEXT_PUBLIC_IDENTITY_API_URL: ${{matrix.identity_api_url}}
      NEXT_PUBLIC_IDENTITY_API_KEY: ${{ secrets[matrix.identity_api_key] }}
      NEXT_PUBLIC_USER_PROFILE_ENDPOINT: /user
      NEXT_PUBLIC_ORGANISATION_ENDPOINT: /${{matrix.identity_brand}}/organisation
      NEXT_PUBLIC_ELIGIBILITY_FORM_OUTPUT_ENDPOINT: /${{matrix.identity_brand}}/formOutputData
      NEXT_PUBLIC_DATADOG_APP_ID: ${{ secrets[matrix.datadog_app_id] }}
      NEXT_PUBLIC_DATADOG_CLIENT_TOKEN: ${{ secrets[matrix.datadog_client_token] }}
      NEXT_PUBLIC_DATADOG_DEFAULT_SERVICE: ${{ matrix.datadog_default_service }}
      NEXT_PUBLIC_DATADOG_ENV: staging_stage
      NEXT_PUBLIC_SEARCH_ENDPOINT: https://lcsn8cd6i6.execute-api.eu-west-2.amazonaws.com/develop
      NEXT_PUBLIC_RETRIEVE_FAVOURITE_ENDPOINT: https://hmkt7fpodd.execute-api.eu-west-2.amazonaws.com/develop/Favourites/retrieve
      NEXT_PUBLIC_UPDATE_FAVOURITE_ENDPOINT: https://hmkt7fpodd.execute-api.eu-west-2.amazonaws.com/develop/Favourites/update
      NEXT_PUBLIC_RETRIEVE_OFFER_ENDPOINT: https://6sz52oo9ud.execute-api.eu-west-2.amazonaws.com/v1/offers/
      NEXT_PUBLIC_APP_MICROSERVICE_BRAND: BLC
      NEXT_PUBLIC_COGNITO_CLIENT_REGION: ${{matrix.region}}
      NEXT_PUBLIC_COGNITO_CLIENT_ID: ${{ secrets[matrix.cognito_client_id] }}
      NEXT_PUBLIC_COGNITO_CLIENT_SECRET: ${{ secrets[matrix.cognito_client_secret] }}
      NEXT_PUBLIC_FLAGSMITH_KEY: ${{ secrets.FLAGSMITH_KEY }}
      NEXT_PUBLIC_COGNITO_LOGIN_URL: https://staging-auth.blcshine.io/login?client_id=fk2gc4sadrmoqi91voamd6snu&response_type=code&scope=aws.cognito.signin.user.admin+email+openid+profile&redirect_uri=https%3A%2F%2Fwww.staging.bluelightcard.co.uk%2Fauth%2Fcallback.php
      NEXT_PUBLIC_COGNITO_LOGOUT_URL: https://staging-auth.blcshine.io/logout?client_id=fk2gc4sadrmoqi91voamd6snu&response_type=code&scope=aws.cognito.signin.user.admin+email+openid+profile&redirect_uri=https%3A%2F%2Fwww.staging.bluelightcard.co.uk%2Fauth%2Fcallback.php&logout_uri=https%3A%2F%2Fwww.staging.bluelightcard.co.uk%2Flogout.php
      NEXT_PUBLIC_BRAZE_SDK_ENDPOINT: sdk.fra-02.braze.eu
      NEXT_PUBLIC_BRAZE_SDK_API_KEY: ${{ secrets.BRAZE_SDK_API_KEY }}
      NEXT_PUBLIC_AMPLITUDE_EXPERIMENT_REDEMPTION_VAULT_WEB: offer-sheet-redeem-vault-search-and-homepage-web-2
      NEXT_PUBLIC_BRAND_URL: staging.bluelightcard.co.uk
      NEXT_PUBLIC_ENV: 'preview'
      NEXT_ZENDESK_V1_BLC_UK_URL: ${{ matrix.zendesk_url }}
      # ENV VARIABLES NEEDED TO CREATE USERNAME & PASSWORD FOR QA ENVIRONMENT
      PR_PREFIX: pr-${{ github.event.pull_request.number }}-blc-mono
      IDENTITY_API_URL: ${{matrix.identity_api_url}}
      COGNITO_POOL_WEB_CLIENT: ${{matrix.cognito_web_pool_client}}
      OFFERS_API_ENDPOINT: ${{matrix.offers_graphql_endpoint}}
      EVENT_BUS_NAME: ${{matrix.event_bus_name}}
      STACK_COGNITO_POOL_CLIENT: ${{matrix.stack_cognito_web_pool_client}}
      # TO-DO Configure these variables to be using the correct values TBC - DISCO-500
      BACKEND_SHARED_DEPLOYED: false
      BACKEND_DISCOVERY_DEPLOYED: false
      BACKEND_REDEMPTIONS_DEPLOYED: false
      BACKEND_OFFERS_DEPLOYED: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
      - name: Configure Non Prod AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::314658777488:role/github-actions-role
          aws-region: ${{matrix.region}}
      - name: Create Username & Password For QA Environment
        id: seeding-script-outputs
        if: ${{ github.event.label.name == 'seed-credentials' || contains(github.event.pull_request.labels.*.name, 'seed-credentials')}}
        run: |
          npm run seed -- $PR_PREFIX
      - name: Cache NextJS Build
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            ${{ github.workspace }}/packages/web/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{matrix.brand}}-${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('packages/web/**/*.[jt]s', 'packages/web/**/*.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{matrix.brand}}-${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
      - name: Build
        run: NEXT_PUBLIC_APP_BRAND=${{matrix.brand}} npm run build -w packages/web
        env:
          NEXT_PUBLIC_IDENTITY_API_URL: ${{matrix.identity_api_url}}
          NEXT_PUBLIC_IDENTITY_API_KEY: ${{ secrets[matrix.identity_api_key] }}
          NEXT_PUBLIC_USER_PROFILE_ENDPOINT: /user
          NEXT_PUBLIC_ORGANISATION_ENDPOINT: /${{matrix.identity_brand}}/organisation
          NEXT_PUBLIC_ELIGIBILITY_FORM_OUTPUT_ENDPOINT: /${{matrix.identity_brand}}/formOutputData
      - name: Publish
        uses: cloudflare/pages-action@1
        id: cloudflare-publish
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{matrix.brand}}
          branch: pr-${{ github.event.pull_request.number }}
          directory: packages/web/out
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Find Comment
        uses: peter-evans/find-comment@v2
        if: success() && github.event.number
        id: fc
        with:
          issue-number: ${{ github.event.number }}
          body-includes: '🚀 Successfully deployed preview environment for ${{matrix.brand}}'

      - name: Create Comment for Frontend ${{matrix.brand}}
        uses: peter-evans/create-or-update-comment@v3
        if: success() && github.event.number
        with:
          issue-number: ${{ github.event.number }}
          comment-id: ${{ steps.fc.outputs.comment-id }}
          edit-mode: replace
          body: |
            ## 🚀 Successfully deployed preview environment for ${{matrix.brand}}

            <table><tr><td><strong>Latest commit:</strong> </td><td>
            <code>${{ github.sha }}</code>
            </td></tr>
            <tr><td><strong>Status:</strong></td><td>&nbsp;✅&nbsp; Deploy successful!</td></tr>
            <tr><td><strong>PR Preview URL:</strong></td><td>
            <a href='https://pr-${{ github.event.pull_request.number }}.${{matrix.offers_brand}}.pages.dev'>https://pr-${{ github.event.pull_request.number }}.${{matrix.offers_brand}}.pages.dev</a>
            (<a href='https://pr-${{ github.event.pull_request.number }}.${{matrix.offers_brand}}.pages.dev/mock-login'>Login</a>)
            </td></tr>
            <tr><td><strong>Specific Commit Preview URL:</strong></td><td>
            <a href='${{ steps.cloudflare-publish.outputs.url }}'>${{ steps.cloudflare-publish.outputs.url }}</a>
            </td></tr>
            <tr><td><strong>QA Test Environment Login Username</strong></td><td>
            <p>
              ${{ steps.seeding-script-outputs.outputs.testUsername}}
            </p>
            </td></tr>
            <tr><td><strong>QA Test Environment Login Password</strong></td><td>
            <p>
            ${{ steps.seeding-script-outputs.outputs.testPassword }}
            </p>
            </td></tr>
            </table>

  # Put comment on PR
  # This comment will only run if all environments are deployed which with the current implementation hardly every happens
  # Therefore the comment block will be separated to allow the separate comments to apply
  commentBackendShared:
    name: Comment Backend Shared on PR
    if: github.actor!= 'dependabot[bot]'
    runs-on: ubuntu-latest
    needs:
      - backend-shared
    steps:
      - name: Find Comment
        uses: peter-evans/find-comment@v2
        if: success() && github.event.number
        id: fc
        with:
          issue-number: ${{ github.event.number }}
          body-includes: '🚀 Successfully Backend Shared Preview Environment'

      - name: Create Comment
        uses: peter-evans/create-or-update-comment@v3
        if: success() && github.event.number
        with:
          issue-number: ${{ github.event.number }}
          comment-id: ${{ steps.fc.outputs.comment-id }}
          edit-mode: replace
          body: |
            ## 🚀 Successfully Backend Shared Preview Environment

            <table><tr><td><strong>Latest commit:</strong> </td><td>
            <code>${{ github.sha }}</code>
            <tr><td><strong>Identity API URL:</strong></td><td>
            <a href='${{ needs.backend-shared.outputs.identity-api-endpoint }}'>
              ${{ needs.backend-shared.outputs.identity-api-endpoint }}
            </a>
            </td></tr>
            </table>

  commentBackendOffers:
    name: Comment Backend Offers on PR
    if: github.actor!= 'dependabot[bot]'
    runs-on: ubuntu-latest
    needs:
      - backend-offers
    steps:
      - name: Find Comment
        uses: peter-evans/find-comment@v2
        if: success() && github.event.number
        id: fc
        with:
          issue-number: ${{ github.event.number }}
          body-includes: '🚀 Successfully Backend Offers Preview Environment'

      - name: Create Comment
        uses: peter-evans/create-or-update-comment@v3
        if: success() && github.event.number
        with:
          issue-number: ${{ github.event.number }}
          comment-id: ${{ steps.fc.outputs.comment-id }}
          edit-mode: replace
          body: |
            ## 🚀 Successfully Backend Offers Preview Environment

            <table><tr><td><strong>Latest commit:</strong> </td><td>
            <code>${{ github.sha }}</code>
            <tr><td><strong>Offers API URL:</strong></td><td>
            <a href='${{ needs.backend-offers.outputs.offers-api-endpoint }}'>
              ${{ needs.backend-offers.outputs.offers-api-endpoint }}
            </a>
            </td></tr>
            </table>

  commentBackendRedemptions:
    name: Comment Backend Redemptions on PR
    if: github.actor!= 'dependabot[bot]'
    runs-on: ubuntu-latest
    needs:
      - backend-redemptions
    steps:
      - name: Find Comment
        uses: peter-evans/find-comment@v2
        if: success() && github.event.number
        id: fc
        with:
          issue-number: ${{ github.event.number }}
          body-includes: '🚀 Successfully Backend Redemptions Preview Environment'

      - name: Create Comment
        uses: peter-evans/create-or-update-comment@v3
        if: success() && github.event.number
        with:
          issue-number: ${{ github.event.number }}
          comment-id: ${{ steps.fc.outputs.comment-id }}
          edit-mode: replace
          body: |
            ## 🚀 Successfully Backend Redemptions Preview Environment

            <table><tr><td><strong>Latest commit:</strong> </td><td>
            <code>${{ github.sha }}</code>
            </td></tr>
            <tr><td><strong>Redemptions API URL:</strong></td><td>
            <a href='${{ needs.backend-redemptions.outputs.redemptions-api-endpoint }}'>
              ${{ needs.backend-redemptions.outputs.redemptions-api-endpoint }}
            </a>
            </td></tr>
            </table>

  commentBackendDiscovery:
    name: Comment Backend Discovery on PR
    if: github.actor!= 'dependabot[bot]'
    runs-on: ubuntu-latest
    needs:
      - backend-discovery
    steps:
      - name: Find Comment
        uses: peter-evans/find-comment@v2
        if: success() && github.event.number
        id: fc
        with:
          issue-number: ${{ github.event.number }}
          body-includes: '🚀 Successfully Backend Discovery Preview Environment'

      - name: Create Comment
        uses: peter-evans/create-or-update-comment@v3
        if: success() && github.event.number
        with:
          issue-number: ${{ github.event.number }}
          comment-id: ${{ steps.fc.outputs.comment-id }}
          edit-mode: replace
          body: |
            ## 🚀 Successfully Backend Discovery Preview Environment

            <table><tr><td><strong>Latest commit:</strong> </td><td>
            <code>${{ github.sha }}</code>
            </td></tr>
            <tr><td><strong>Discovery API URL:</strong></td><td>
            <a href='${{ needs.backend-discovery.outputs.discovery-api-endpoint }}'>
              ${{ needs.backend-discovery.outputs.discovery-api-endpoint }}
            </a>
            </td></tr>
            </table>

  e2e-redemptions:
    name: Run E2E tests (redemptions)
    runs-on: ubuntu-latest
    needs:
      - install
      - backend-redemptions
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
      - name: Configure Non Prod AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::314658777488:role/github-actions-role
          aws-region: eu-west-2
      - name: Install Session Manager Plugin
        run: |
          curl "https://s3.amazonaws.com/session-manager-downloads/plugin/latest/ubuntu_64bit/session-manager-plugin.deb" -o "session-manager-plugin.deb"
          sudo dpkg -i session-manager-plugin.deb
      - name: Run E2E tests
        working-directory: packages/api/redemptions
        env:
          BRAND: BLC_UK
          REDEMPTIONS_DATABASE_PORT: 5432
          REDEMPTIONS_DATABASE_NAME: redemptions
          REDEMPTIONS_DATABASE_TYPE: RDS_PG_SINGLE_INSTANCE
        run: npx sst bind --stage $PR_PREFIX --region eu-west-2 vitest

  e2e-identity:
    name: Run E2E tests (identity)
    runs-on: ubuntu-latest
    needs:
      - install
      - backend-shared
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
      - name: Configure Non Prod AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::314658777488:role/github-actions-role
          aws-region: eu-west-2
      - name: Run E2E Test
        working-directory: packages/api/identity
        env:
          BRAND: BLC_UK
        run: npx sst bind --stage $PR_PREFIX vitest e2e

  e2e-discovery:
    name: Run E2E tests (discovery)
    runs-on: ubuntu-latest
    needs:
      - install
      - backend-discovery
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
      - name: Configure Non Prod AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::314658777488:role/github-actions-role
          aws-region: eu-west-2
      - name: Run E2E tests
        working-directory: packages/api/discovery
        env:
          BRAND: BLC_UK
          REGION: eu-west-2
        run: npx sst bind --stage $PR_PREFIX vitest e2e

  # Lighthouse Audit of Web frontend
  # TODO: Currently not working with authenticated pages due to being redirected to login page
  # lighthouse:
  #   name: Web Audit using Lighthouse
  #   if: github.actor!= 'dependabot[bot]'
  #   runs-on: ubuntu-latest
  #   needs:
  #     - frontend
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #     - name: Setup
  #       uses: ./.github/actions/setup
  #     - name: Audit URLs using Lighthouse
  #       uses: treosh/lighthouse-ci-action@v10
  #       id: lighthouse_audit
  #       with:
  #         urls: |
  #           ${{ needs.frontend.outputs.url }}/eligibility
  #         budgetPath: '.github/lighthouse/budget.json'
  #         configPath: '.github/lighthouse/.lighthouserc.json'
  #         uploadArtifacts: true
  #         temporaryPublicStorage: true
  #         runs: 3

  #     - name: Format lighthouse result
  #       id: lighthouse_result
  #       if: ${{ always() }}
  #       uses: actions/github-script@v6
  #       with:
  #         github-token: ${{secrets.GITHUB_TOKEN}}
  #         script: |
  #           const { default: formatLighthouseResult } = await import('${{ github.workspace }}/.github/scripts/formatLighthouseResult.js')
  #           const links = ${{ steps.lighthouse_audit.outputs.links }};
  #           const manifest = ${{ steps.lighthouse_audit.outputs.manifest }}
  #           await formatLighthouseResult({ links, manifest, core })

  #     - name: Format budget result
  #       id: budget_result
  #       if: ${{ always() }}
  #       uses: actions/github-script@v6
  #       with:
  #         github-token: ${{secrets.GITHUB_TOKEN}}
  #         script: |
  #           const { default: formatBudgetResult } = await import('${{ github.workspace }}/.github/scripts/formatBudgetResult.js')
  #           const assertions = ${{ steps.lighthouse_audit.outputs.assertionResults }}
  #           await formatBudgetResult({ assertions, core })

  #     - name: Add Lighthouse comment to PR
  #       id: lighthouse_comment_to_pr
  #       if: ${{ always() }}
  #       uses: marocchino/sticky-pull-request-comment@v2
  #       with:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         number: ${{ github.event.pull_request.number }}
  #         header: lighthouse
  #         message: |
  #           ${{ steps.lighthouse_result.outputs.comment }}

  #     - name: Add Budget comment to PR
  #       id: budget_comment_to_pr
  #       if: ${{ always() }}
  #       uses: marocchino/sticky-pull-request-comment@v2
  #       with:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         number: ${{ github.event.pull_request.number }}
  #         header: budget
  #         message: |
  #           ${{ steps.budget_result.outputs.comment }}
