name: 'Mobile Hybrid'
on:
  push:
    paths:
      - packages/mobile-hybrid/**
      - package-lock.json
      - sst.config.ts
      - package.json
      - .github/workflows/mobile-hybrid.yml
  pull_request:
    paths:
      - packages/mobile-hybrid/**
      - package-lock.json
      - sst.config.ts
      - package.json
      - .github/workflows/mobile-hybrid.yml

jobs:
  dev-env-mapping:
    if: github.event_name == 'push' && github.ref != 'refs/heads/main'
    name: Dev env mapping
    runs-on: ubuntu-latest
    outputs:
      devEnv: ${{ steps.dev-env.outputs[github.actor] }}
    steps:
      - uses: actions/checkout@v4
      - id: dev-env
        run: echo $(grep "${{ github.actor }}=" packages/mobile-hybrid/dev-env-mapping.txt) >> "$GITHUB_OUTPUT"

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node_modules-${{hashFiles('package-lock.json')}}
          restore-keys: node_modules- # Take any latest cache if failed to find it for current yarn.lock
      - run: npm ci
      - run: npm test -w packages/mobile-hybrid

  lint:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node_modules-${{hashFiles('package-lock.json')}}
          restore-keys: node_modules- # Take any latest cache if failed to find it for current yarn.lock
      - run: npm ci
      - name: JavaScript and Typescript
        run: npm run lint -w packages/mobile-hybrid

  changelog:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    name: Changelog
    runs-on: ubuntu-latest
    outputs:
      releases_created: ${{ steps.tag-release.outputs.releases_created }}
    steps:
      - uses: GoogleCloudPlatform/release-please-action@v3
        id: tag-release
        with:
          path: packages/mobile-hybrid
          token: ${{ secrets.GITHUB_TOKEN }}
          monorepo-tags: true
          release-type: node
          package-name: bluelightcard/mobile-hybrid
          changelog-types: '[{"type":"feat","section":"Features","hidden":false},{"type":"fix","section":"Bug Fixes","hidden":false},{"type":"chore","section":"Other Changes","hidden":false},{"type":"refactor","section":"Other Changes","hidden":false}]'

  dev:
    if: github.event_name == 'push' && github.ref != 'refs/heads/main' && needs.dev-env-mapping.outputs.devEnv
    name: Deploy Dev
    runs-on: ubuntu-latest
    needs: dev-env-mapping
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node_modules-${{hashFiles('package-lock.json')}}
          restore-keys: node_modules- # Take any latest cache if failed to find it for current yarn.lock
      - run: npm ci
      - name: Build
        run: npm run build -w packages/mobile-hybrid
      - name: Publishing env ${{ needs.dev-env-mapping.outputs.devEnv }}
        uses: cloudflare/pages-action@1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{ needs.dev-env-mapping.outputs.devEnv }}
          branch: 'main'
          directory: packages/mobile-hybrid/dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

  staging:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    name: Deploy Staging
    runs-on: ubuntu-latest
    needs:
      - test
      - lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node_modules-${{hashFiles('package-lock.json')}}
          restore-keys: node_modules- # Take any latest cache if failed to find it for current yarn.lock
      - run: npm ci
      - name: Build
        run: npm run build -w packages/mobile-hybrid
      - name: Publish
        uses: cloudflare/pages-action@1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: 'mobile-hybrid-poc'
          directory: packages/mobile-hybrid/dist
          branch: 'main'
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

  release:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && needs.changelog.outputs.releases_created
    name: Deploy Production
    environment: Production
    runs-on: ubuntu-latest
    needs:
      - test
      - staging
      - changelog
    steps:
      - uses: actions/checkout@v4
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node_modules-${{hashFiles('package-lock.json')}}
          restore-keys: node_modules- # Take any latest cache if failed to find it for current yarn.lock
      - run: npm ci
      - name: Build
        run: npm run build -w packages/mobile-hybrid
      - name: Publish
        uses: cloudflare/pages-action@1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: 'mobile-hybrid'
          directory: packages/mobile-hybrid/dist
          branch: 'main'
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
