name: Deploy Payments to Production

on:
  workflow_call:
    inputs:
      commit_hash_or_tag:
        description: The commit SHA that you wish to revert to
        type: string
        default: 'main'
      aws_role:
        description: The AWS role to assume when deploying
        type: string
        required: true

jobs:
  release-paymwents-to-production:
    name: Release to production
    environment: Production
    runs-on: ubuntu-latest
    strategy:
      matrix:
        deployment:
          - brand: BLC_UK
            region: eu-west-2
            stage: production
          - brand: BLC_AU
            region: ap-southeast-2
            stage: production
          - brand: DDS_UK
            region: eu-west-2
            stage: production-dds
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.commit_hash_or_tag }}
      - name: Setup
        uses: ./.github/actions/setup
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Configure Prod AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ matrix.deployment.region }}
          role-to-assume: ${{ inputs.aws_role }}
      - name: Build
        run: npm run build
      - name: Deploy
        env:
          BRAND: ${{ matrix.deployment.brand }}
          DD_VERSION: '${{ env.DD_VERSION }}'
          DD_ENV: '${{ env.DD_ENV }}'
          DD_GIT_COMMIT_SHA: '${{ env.DD_GIT_COMMIT_SHA }}'
          DD_GIT_REPOSITORY_URL: '${{ env.DD_GIT_REPOSITORY_URL }}'
          DD_API_KEY: '${{ secrets.DATADOG_AWS_INSTRUMENTATION_TOKEN }}'
          USE_DATADOG_AGENT: 'true'
          # TODO: Remove these once Cognito has been deprecated.
          BLC_UK_COGNITO_USER_POOL_ID: 'eu-west-2_D3aAVuWHo'
          BLC_UK_OLD_COGNITO_USER_POOL_ID: 'eu-west-2_jrwTfFRgM'
          DDS_COGNITO_USER_POOL_ID: 'eu-west-2_3WlS5ZkAh'
          DDS_OLD_COGNITO_USER_POOL_ID: 'eu-west-2_y2KyCUbVT'
          BLC_UK_IDENTITY_API_ID: 'ue8dcieh75'
        run: npx sst deploy global --stage ${{matrix.deployment.stage}} --region ${{matrix.deployment.region}} && npx sst deploy payments --stage ${{matrix.deployment.stage}} --region ${{matrix.deployment.region}}
      - name: Datadog deployment metrics
        uses: ./.github/actions/datadog
        with:
          environment: 'production'
          service_name: 'payments'
          workflow_run_id: ${{ github.run_id }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DATADOG_DORA_METRICS_CLIENT_TOKEN: ${{ secrets.DATADOG_DORA_METRICS_CLIENT_TOKEN }}
      - name: Send Slack message on failure
        if: ${{ failure() }}
        uses: bluelightcard/github-actions-slack-notification@v1
        with:
          webhook_url: ${{ secrets.CI_FAILURE_NOTIFICATIONS_WEBHOOK }}
          title: ':x: Production deployment failed for payments (${{matrix.deployment.brand}})!'
      - name: Send Slack message on success
        if: ${{ success() }}
        uses: bluelightcard/github-actions-slack-notification@v1
        with:
          webhook_url: ${{ secrets.CI_SUCCESS_NOTIFICATIONS_WEBHOOK }}
          title: ':white_check_mark: Production deployment for payments (${{matrix.deployment.brand}}) was successful!'
