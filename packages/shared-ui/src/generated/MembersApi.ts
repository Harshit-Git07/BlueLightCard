/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/members/{memberId}/applications/{applicationId}/code': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete?: never;
    options: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          memberId: string;
          applicationId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description 204 response */
        204: {
          headers: {
            'Access-Control-Allow-Origin'?: string;
            'Access-Control-Allow-Methods'?: string;
            'Access-Control-Allow-Credentials'?: string;
            'Access-Control-Allow-Headers'?: string;
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/orgs/{organisationId}': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          organisationId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description 200 response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['OrganisationModel'];
          };
        };
        /** @description 201 response */
        201: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 204 response */
        204: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 400 response */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['BadRequestModel'];
          };
        };
        /** @description 401 response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 403 response */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 404 response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 500 response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          organisationId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description 204 response */
        204: {
          headers: {
            'Access-Control-Allow-Origin'?: string;
            'Access-Control-Allow-Methods'?: string;
            'Access-Control-Allow-Credentials'?: string;
            'Access-Control-Allow-Headers'?: string;
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/members/{memberId}': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete?: never;
    options: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          memberId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description 204 response */
        204: {
          headers: {
            'Access-Control-Allow-Origin'?: string;
            'Access-Control-Allow-Methods'?: string;
            'Access-Control-Allow-Credentials'?: string;
            'Access-Control-Allow-Headers'?: string;
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/members/{memberId}/profile': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          memberId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description 200 response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['ProfileModel'];
          };
        };
        /** @description 201 response */
        201: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 204 response */
        204: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 400 response */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['BadRequestModel'];
          };
        };
        /** @description 401 response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 403 response */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 404 response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 500 response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
      };
    };
    put: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          memberId: string;
        };
        cookie?: never;
      };
      requestBody: {
        content: {
          'application/json': components['schemas']['UpdateProfileModel'];
        };
      };
      responses: never;
    };
    post?: never;
    delete?: never;
    options: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          memberId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description 204 response */
        204: {
          headers: {
            'Access-Control-Allow-Origin'?: string;
            'Access-Control-Allow-Methods'?: string;
            'Access-Control-Allow-Credentials'?: string;
            'Access-Control-Allow-Headers'?: string;
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/members/{memberId}/marketing': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete?: never;
    options: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          memberId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description 204 response */
        204: {
          headers: {
            'Access-Control-Allow-Origin'?: string;
            'Access-Control-Allow-Methods'?: string;
            'Access-Control-Allow-Credentials'?: string;
            'Access-Control-Allow-Headers'?: string;
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/members/{memberId}/applications/{applicationId}/code/apply': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          memberId: string;
          applicationId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description 200 response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['UpdateApplicationModel'];
          };
        };
        /** @description 201 response */
        201: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 204 response */
        204: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 400 response */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['BadRequestModel'];
          };
        };
        /** @description 401 response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 403 response */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 404 response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 500 response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
      };
    };
    post?: never;
    delete?: never;
    options: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          memberId: string;
          applicationId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description 204 response */
        204: {
          headers: {
            'Access-Control-Allow-Origin'?: string;
            'Access-Control-Allow-Methods'?: string;
            'Access-Control-Allow-Credentials'?: string;
            'Access-Control-Allow-Headers'?: string;
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/members': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete?: never;
    options: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description 204 response */
        204: {
          headers: {
            'Access-Control-Allow-Origin'?: string;
            'Access-Control-Allow-Methods'?: string;
            'Access-Control-Allow-Credentials'?: string;
            'Access-Control-Allow-Headers'?: string;
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/members/{memberId}/applications/{applicationId}': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          memberId: string;
          applicationId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description 200 response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['ApplicationModel'];
          };
        };
        /** @description 201 response */
        201: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 204 response */
        204: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 400 response */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['BadRequestModel'];
          };
        };
        /** @description 401 response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 403 response */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 404 response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 500 response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
      };
    };
    put: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          memberId: string;
          applicationId: string;
        };
        cookie?: never;
      };
      requestBody: {
        content: {
          'application/json': components['schemas']['UpdateApplicationModel'];
        };
      };
      responses: never;
    };
    post?: never;
    delete?: never;
    options: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          memberId: string;
          applicationId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description 204 response */
        204: {
          headers: {
            'Access-Control-Allow-Origin'?: string;
            'Access-Control-Allow-Methods'?: string;
            'Access-Control-Allow-Credentials'?: string;
            'Access-Control-Allow-Headers'?: string;
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete?: never;
    options: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description 204 response */
        204: {
          headers: {
            'Access-Control-Allow-Origin'?: string;
            'Access-Control-Allow-Methods'?: string;
            'Access-Control-Allow-Credentials'?: string;
            'Access-Control-Allow-Headers'?: string;
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/members/{memberId}/applications/{applicationId}/uploadDocument': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          memberId: string;
          applicationId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description 200 response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['DocumentUploadLocation'];
          };
        };
        /** @description 201 response */
        201: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 204 response */
        204: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 400 response */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['BadRequestModel'];
          };
        };
        /** @description 401 response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 403 response */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 404 response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 500 response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
      };
    };
    delete?: never;
    options: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          memberId: string;
          applicationId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description 204 response */
        204: {
          headers: {
            'Access-Control-Allow-Origin'?: string;
            'Access-Control-Allow-Methods'?: string;
            'Access-Control-Allow-Credentials'?: string;
            'Access-Control-Allow-Headers'?: string;
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/members/{memberId}/profile/email': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          memberId: string;
        };
        cookie?: never;
      };
      requestBody: {
        content: {
          'application/json': components['schemas']['EmailChangeModel'];
        };
      };
      responses: never;
    };
    post?: never;
    delete?: never;
    options: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          memberId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description 204 response */
        204: {
          headers: {
            'Access-Control-Allow-Origin'?: string;
            'Access-Control-Allow-Methods'?: string;
            'Access-Control-Allow-Credentials'?: string;
            'Access-Control-Allow-Headers'?: string;
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/orgs/{organisationId}/employers/{employerId}': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          organisationId: string;
          employerId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description 200 response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['EmployerModel'];
          };
        };
        /** @description 201 response */
        201: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 204 response */
        204: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 400 response */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['BadRequestModel'];
          };
        };
        /** @description 401 response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 403 response */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 404 response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 500 response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          organisationId: string;
          employerId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description 204 response */
        204: {
          headers: {
            'Access-Control-Allow-Origin'?: string;
            'Access-Control-Allow-Methods'?: string;
            'Access-Control-Allow-Credentials'?: string;
            'Access-Control-Allow-Headers'?: string;
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/members/{memberId}/applications/{applicationId}/code/validate/{promoCode}': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          memberId: string;
          applicationId: string;
          promoCode: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description 200 response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['PromoCodeResponseModel'];
          };
        };
        /** @description 201 response */
        201: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 204 response */
        204: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 400 response */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['BadRequestModel'];
          };
        };
        /** @description 401 response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 403 response */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 404 response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 500 response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
      };
    };
    delete?: never;
    options: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          memberId: string;
          applicationId: string;
          promoCode: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description 204 response */
        204: {
          headers: {
            'Access-Control-Allow-Origin'?: string;
            'Access-Control-Allow-Methods'?: string;
            'Access-Control-Allow-Credentials'?: string;
            'Access-Control-Allow-Headers'?: string;
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/members/{memberId}/marketing/braze': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          memberId: string;
        };
        cookie?: never;
      };
      requestBody: {
        content: {
          'application/json': components['schemas']['BrazeAttributesModel'];
        };
      };
      responses: never;
    };
    delete?: never;
    options: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          memberId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description 204 response */
        204: {
          headers: {
            'Access-Control-Allow-Origin'?: string;
            'Access-Control-Allow-Methods'?: string;
            'Access-Control-Allow-Credentials'?: string;
            'Access-Control-Allow-Headers'?: string;
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/orgs/{organisationId}/employers': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          organisationId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description 200 response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['EmployerModel'];
          };
        };
        /** @description 201 response */
        201: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 204 response */
        204: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 400 response */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['BadRequestModel'];
          };
        };
        /** @description 401 response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 403 response */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 404 response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 500 response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          organisationId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description 204 response */
        204: {
          headers: {
            'Access-Control-Allow-Origin'?: string;
            'Access-Control-Allow-Methods'?: string;
            'Access-Control-Allow-Credentials'?: string;
            'Access-Control-Allow-Headers'?: string;
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/members/{memberId}/marketing/preferences/{environment}': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          memberId: string;
          environment: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description 200 response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['MarketingPreferencesModel'];
          };
        };
        /** @description 201 response */
        201: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 204 response */
        204: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 400 response */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['BadRequestModel'];
          };
        };
        /** @description 401 response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 403 response */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 404 response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 500 response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          memberId: string;
          environment: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description 204 response */
        204: {
          headers: {
            'Access-Control-Allow-Origin'?: string;
            'Access-Control-Allow-Methods'?: string;
            'Access-Control-Allow-Credentials'?: string;
            'Access-Control-Allow-Headers'?: string;
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/orgs': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description 200 response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['OrganisationModel'];
          };
        };
        /** @description 201 response */
        201: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 204 response */
        204: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 400 response */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['BadRequestModel'];
          };
        };
        /** @description 401 response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 403 response */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 404 response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 500 response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description 204 response */
        204: {
          headers: {
            'Access-Control-Allow-Origin'?: string;
            'Access-Control-Allow-Methods'?: string;
            'Access-Control-Allow-Credentials'?: string;
            'Access-Control-Allow-Headers'?: string;
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/members/profile': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description 200 response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['ProfileModel'];
          };
        };
        /** @description 201 response */
        201: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 204 response */
        204: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 400 response */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['BadRequestModel'];
          };
        };
        /** @description 401 response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 403 response */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 404 response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 500 response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
      };
    };
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody: {
        content: {
          'application/json': components['schemas']['CreateProfileModel'];
        };
      };
      responses: {
        /** @description 200 response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['CreateProfileModelResponse'];
          };
        };
        /** @description 201 response */
        201: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 204 response */
        204: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 400 response */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['BadRequestModel'];
          };
        };
        /** @description 401 response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 403 response */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 404 response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 500 response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
      };
    };
    delete?: never;
    options: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description 204 response */
        204: {
          headers: {
            'Access-Control-Allow-Origin'?: string;
            'Access-Control-Allow-Methods'?: string;
            'Access-Control-Allow-Credentials'?: string;
            'Access-Control-Allow-Headers'?: string;
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/members/{memberId}/applications': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          memberId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description 200 response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['ApplicationModel'];
          };
        };
        /** @description 201 response */
        201: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 204 response */
        204: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 400 response */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['BadRequestModel'];
          };
        };
        /** @description 401 response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 403 response */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 404 response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 500 response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
      };
    };
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          memberId: string;
        };
        cookie?: never;
      };
      requestBody: {
        content: {
          'application/json': components['schemas']['CreateApplicationModel'];
        };
      };
      responses: {
        /** @description 200 response */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['CreateApplicationModelResponse'];
          };
        };
        /** @description 201 response */
        201: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 204 response */
        204: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 400 response */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['BadRequestModel'];
          };
        };
        /** @description 401 response */
        401: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 403 response */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 404 response */
        404: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
        /** @description 500 response */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['GenericModel'];
          };
        };
      };
    };
    delete?: never;
    options: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          memberId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description 204 response */
        204: {
          headers: {
            'Access-Control-Allow-Origin'?: string;
            'Access-Control-Allow-Methods'?: string;
            'Access-Control-Allow-Credentials'?: string;
            'Access-Control-Allow-Headers'?: string;
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/members/{memberId}/marketing/braze/update': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          memberId: string;
        };
        cookie?: never;
      };
      requestBody: {
        content: {
          'application/json': components['schemas']['BrazeUpdateModel'];
        };
      };
      responses: never;
    };
    delete?: never;
    options: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          memberId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description 204 response */
        204: {
          headers: {
            'Access-Control-Allow-Origin'?: string;
            'Access-Control-Allow-Methods'?: string;
            'Access-Control-Allow-Credentials'?: string;
            'Access-Control-Allow-Headers'?: string;
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/members/{memberId}/marketing/preferences': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete?: never;
    options: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          memberId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description 204 response */
        204: {
          headers: {
            'Access-Control-Allow-Origin'?: string;
            'Access-Control-Allow-Methods'?: string;
            'Access-Control-Allow-Credentials'?: string;
            'Access-Control-Allow-Headers'?: string;
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/members/{memberId}/profile/password': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          memberId: string;
        };
        cookie?: never;
      };
      requestBody: {
        content: {
          'application/json': components['schemas']['PasswordChangeModel'];
        };
      };
      responses: never;
    };
    post?: never;
    delete?: never;
    options: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          memberId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description 204 response */
        204: {
          headers: {
            'Access-Control-Allow-Origin'?: string;
            'Access-Control-Allow-Methods'?: string;
            'Access-Control-Allow-Credentials'?: string;
            'Access-Control-Allow-Headers'?: string;
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/members/{memberId}/applications/{applicationId}/code/validate': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete?: never;
    options: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          memberId: string;
          applicationId: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description 204 response */
        204: {
          headers: {
            'Access-Control-Allow-Origin'?: string;
            'Access-Control-Allow-Methods'?: string;
            'Access-Control-Allow-Credentials'?: string;
            'Access-Control-Allow-Headers'?: string;
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    head?: never;
    patch?: never;
    trace?: never;
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** CreateApplicationModel */
    CreateApplicationModel: {
      /** @enum {string} */
      eligibilityStatus?:
        | 'INELIGIBLE'
        | 'AWAITING_ID_APPROVAL'
        | 'ASSIGNED_FOR_APPROVAL'
        | 'ELIGIBLE';
      applicationReason: ('SIGNUP' | 'RENEWAL' | 'NAME_CHANGE' | 'LOST_CARD' | 'REPRINT') | never;
      /** Format: date-time */
      startDate?: string;
    };
    /** CreateApplicationModelResponse */
    CreateApplicationModelResponse: {
      /** Format: uuid */
      applicationId: string;
    };
    /** DocumentUploadLocation */
    DocumentUploadLocation: {
      preSignedUrl: string;
    };
    /** UpdateProfileModel */
    UpdateProfileModel: {
      lastName: string;
      /** Format: date-time */
      signupDate?: string;
      /** Format: uuid */
      organisationId?: string;
      /** @enum {string} */
      gender?: 'MALE' | 'FEMALE' | 'OTHER' | 'PREFER_NOT_TO_SAY';
      companyName?: string;
      jobTitle?: string;
      county?: string;
      employerName?: string;
      /** Format: date */
      dateOfBirth: string;
      /** @enum {string} */
      employmentStatus?: 'EMPLOYED' | 'RETIRED' | 'VOLUNTEER';
      jobReference?: string;
      firstName: string;
      /** Format: uuid */
      employerId?: string;
      phoneNumber?: string;
      companyNumber?: string;
      /** Format: email */
      spareEmail?: string;
      /** @default false */
      spareEmailValidated: boolean;
      /** @default false */
      emailValidated: boolean;
      status?: string;
    };
    /** ApplicationModel */
    ApplicationModel: {
      country?: string;
      /** Format: date-time */
      purchaseDate?: string;
      city?: string;
      nameChangeLastName?: Record<string, never>;
      nameChangeDocType?: Record<string, never>;
      nameChangeReason?: Record<string, never>;
      idS3LocationSecondary?: string;
      promoCode?: Record<string, never>;
      verificationMethod?: string;
      applicationReason: ('SIGNUP' | 'RENEWAL' | 'NAME_CHANGE' | 'LOST_CARD' | 'REPRINT') | never;
      /** @enum {string} */
      paymentStatus?:
        | 'AWAITING_PAYMENT'
        | 'PAID_CARD'
        | 'PAID_PAYPAL'
        | 'PAID_PROMO_CODE'
        | 'PAID_CHEQUE'
        | 'PAID_ADMIN'
        | 'PENDING_REFUND'
        | 'REFUNDED';
      /** Format: uuid */
      memberId: string;
      idS3LocationPrimary?: string;
      address2?: string;
      address1?: string;
      postcode?: string;
      /** @enum {string} */
      eligibilityStatus?:
        | 'INELIGIBLE'
        | 'AWAITING_ID_APPROVAL'
        | 'ASSIGNED_FOR_APPROVAL'
        | 'ELIGIBLE';
      promoCodeApplied?: boolean;
      trustedDomainValidated?: boolean;
      nameChangeFirstName?: Record<string, never>;
      /** Format: uuid */
      applicationId: string;
      rejectionReason?:
        | (
            | 'DECLINE_INCORRECT_ID'
            | 'PICTURE_DECLINE_ID'
            | 'DL_PP_DECLINE_ID'
            | 'DATE_DECLINE_ID'
            | 'BLURRY_IMAGE_DECLINE_ID'
            | 'DIFFERENT_NAME_DECLINE_ID'
            | 'PASSWORD_PROTECTED_DECLINE_ID'
            | 'DECLINE_NOT_ELIGIBLE'
          )
        | never;
      /** Format: date-time */
      startDate?: string;
      trustedDomainEmail?: string;
      cardNumber?: string;
    };
    /** EmployerModel */
    EmployerModel: {
      /** Format: uuid */
      organisationId: string;
      /** @default false */
      bypassPayment: boolean;
      retiredIdRequirements?: {
        /** @default 1 */
        minimumRequired: number;
        supportedDocuments: {
          idKey: string;
          guidelines: string;
          description: string;
          /** @enum {string} */
          type: 'IMAGE_UPLOAD' | 'TRUSTED_DOMAIN';
          title: string;
          /** @default false */
          required: boolean;
        }[];
      };
      /** @default true */
      active: boolean;
      /** @default 0 */
      idUploadCount: number;
      type?: Record<string, never>;
      employmentStatus?: ('EMPLOYED' | 'RETIRED' | 'VOLUNTEER')[];
      volunteerIdRequirements?: {
        /** @default 1 */
        minimumRequired: number;
        supportedDocuments: {
          idKey: string;
          guidelines: string;
          description: string;
          /** @enum {string} */
          type: 'IMAGE_UPLOAD' | 'TRUSTED_DOMAIN';
          title: string;
          /** @default false */
          required: boolean;
        }[];
      };
      /** @default false */
      isJobReferenceMandatory: boolean;
      lastUpdated?: string;
      /** Format: uuid */
      employerId: string;
      employedIdRequirements?: {
        /** @default 1 */
        minimumRequired: number;
        supportedDocuments: {
          idKey: string;
          guidelines: string;
          description: string;
          /** @enum {string} */
          type: 'IMAGE_UPLOAD' | 'TRUSTED_DOMAIN';
          title: string;
          /** @default false */
          required: boolean;
        }[];
      };
      /** @default false */
      bypassId: boolean;
      /** @default true */
      isJobTitleMandatory: boolean;
      name: string;
      /** @default [] */
      trustedDomains: string[];
    };
    /** UpdateApplicationModel */
    UpdateApplicationModel: {
      country?: string;
      /** Format: date-time */
      purchaseDate?: string;
      address2?: string;
      city?: string;
      address1?: string;
      nameChangeLastName?: Record<string, never>;
      postcode?: string;
      /** @enum {string} */
      eligibilityStatus?:
        | 'INELIGIBLE'
        | 'AWAITING_ID_APPROVAL'
        | 'ASSIGNED_FOR_APPROVAL'
        | 'ELIGIBLE';
      nameChangeDocType?: Record<string, never>;
      nameChangeReason?: Record<string, never>;
      promoCodeApplied?: boolean;
      trustedDomainValidated?: boolean;
      nameChangeFirstName?: Record<string, never>;
      promoCode?: Record<string, never>;
      verificationMethod?: string;
      rejectionReason?:
        | (
            | 'DECLINE_INCORRECT_ID'
            | 'PICTURE_DECLINE_ID'
            | 'DL_PP_DECLINE_ID'
            | 'DATE_DECLINE_ID'
            | 'BLURRY_IMAGE_DECLINE_ID'
            | 'DIFFERENT_NAME_DECLINE_ID'
            | 'PASSWORD_PROTECTED_DECLINE_ID'
            | 'DECLINE_NOT_ELIGIBLE'
          )
        | never;
      /** Format: date-time */
      startDate?: string;
      /** @enum {string} */
      paymentStatus?:
        | 'AWAITING_PAYMENT'
        | 'PAID_CARD'
        | 'PAID_PAYPAL'
        | 'PAID_PROMO_CODE'
        | 'PAID_CHEQUE'
        | 'PAID_ADMIN'
        | 'PENDING_REFUND'
        | 'REFUNDED';
      trustedDomainEmail?: string;
      cardNumber?: string;
    };
    /** OrganisationModel */
    OrganisationModel: {
      /** Format: uuid */
      organisationId: string;
      /** @default false */
      bypassPayment: boolean;
      retiredIdRequirements?: {
        /** @default 1 */
        minimumRequired: number;
        supportedDocuments: {
          idKey: string;
          guidelines: string;
          description: string;
          /** @enum {string} */
          type: 'IMAGE_UPLOAD' | 'TRUSTED_DOMAIN';
          title: string;
          /** @default false */
          required: boolean;
        }[];
      };
      /** @default false */
      isSelfEmployed: boolean;
      /** @default true */
      active: boolean;
      /** @default 0 */
      idUploadCount: number;
      type?: Record<string, never>;
      employmentStatus?: ('EMPLOYED' | 'RETIRED' | 'VOLUNTEER')[];
      volunteerIdRequirements?: {
        /** @default 1 */
        minimumRequired: number;
        supportedDocuments: {
          idKey: string;
          guidelines: string;
          description: string;
          /** @enum {string} */
          type: 'IMAGE_UPLOAD' | 'TRUSTED_DOMAIN';
          title: string;
          /** @default false */
          required: boolean;
        }[];
      };
      lastUpdated?: string;
      employedIdRequirements?: {
        /** @default 1 */
        minimumRequired: number;
        supportedDocuments: {
          idKey: string;
          guidelines: string;
          description: string;
          /** @enum {string} */
          type: 'IMAGE_UPLOAD' | 'TRUSTED_DOMAIN';
          title: string;
          /** @default false */
          required: boolean;
        }[];
      };
      /** @default false */
      bypassId: boolean;
      name: string;
      /** @default [] */
      trustedDomains: string[];
    };
    /** CreateProfileModel */
    CreateProfileModel: {
      firstName: string;
      lastName: string;
      /** Format: date */
      dateOfBirth: string;
      /** @enum {string} */
      employmentStatus?: 'EMPLOYED' | 'RETIRED' | 'VOLUNTEER';
      /** Format: email */
      email: string;
    };
    /** CreateProfileModelResponse */
    CreateProfileModelResponse: {
      /** Format: uuid */
      memberId: string;
    };
    /** MarketingPreferencesModel */
    MarketingPreferencesModel: {
      spam: Record<string, never>;
      moreSpam: Record<string, never>;
    };
    /** GenericModel */
    GenericModel: {
      message: string;
    };
    /** PasswordChangeModel */
    PasswordChangeModel: {
      newPassword: string;
      /** Format: email */
      email: string;
      currentPassword: string;
    };
    /** PromoCodeResponseModel */
    PromoCodeResponseModel: {
      bypassPayment?: boolean;
      bypassVerification?: boolean;
    };
    /** BrazeUpdateModel */
    BrazeUpdateModel: {
      attributes: {
        [key: string]: Record<string, never>;
      };
    };
    /** BrazeAttributesModel */
    BrazeAttributesModel: {
      /** @default [] */
      attributes: string[];
    };
    /** BadRequestModel */
    BadRequestModel: {
      message: string;
      errors?: {
        path: string[];
        code: string;
        expected: string;
        received: string;
        message: string;
      }[];
    };
    /** ProfileModel */
    ProfileModel: {
      lastName: string;
      lastLogin?: string;
      /** Format: uuid */
      organisationId?: string;
      /** @default [] */
      cards: {
        /** Format: date-time */
        purchaseDate?: string;
        /** Format: date-time */
        refundedDate?: string;
        /** Format: date-time */
        postedDate?: string;
        /** Format: date-time */
        expiryDate: string;
        /** Format: date-time */
        createdDate: string;
        nameOnCard: string;
        /** @enum {string} */
        printingErrorStatus?:
          | 'MISSING_ADDRESS'
          | 'NAME_TOO_LONG'
          | 'MISSING_ADDRESS AND NAME_TOO_LONG';
        promoCode?: string;
        updated?: string | never;
        cardNumber: string;
        /** @enum {string} */
        cardStatus:
          | 'AWAITING_BATCHING'
          | 'ADDED_TO_BATCH'
          | 'AWAITING_POSTAGE'
          | 'PHYSICAL_CARD'
          | 'VIRTUAL_CARD'
          | 'CARD_LOST'
          | 'DISABLED'
          | 'CARD_EXPIRED';
        /** @enum {string} */
        paymentStatus?:
          | 'AWAITING_PAYMENT'
          | 'PAID_CARD'
          | 'PAID_PAYPAL'
          | 'PAID_PROMO_CODE'
          | 'PAID_CHEQUE'
          | 'PAID_ADMIN'
          | 'PENDING_REFUND'
          | 'REFUNDED';
        /** Format: uuid */
        memberId: string;
        batchNumber?: string;
      }[];
      /** @enum {string} */
      gender?: 'MALE' | 'FEMALE' | 'OTHER' | 'PREFER_NOT_TO_SAY';
      companyName?: string;
      jobTitle?: string;
      county?: string;
      employerName?: string;
      /** @enum {string} */
      employmentStatus?: 'EMPLOYED' | 'RETIRED' | 'VOLUNTEER';
      companyNumber?: string;
      /** Format: email */
      spareEmail?: string;
      /** Format: email */
      email: string;
      /** Format: uuid */
      memberId: string;
      /** Format: date-time */
      signupDate?: string;
      lastIpAddress?: string;
      /** Format: date */
      dateOfBirth: string;
      jobReference?: string;
      firstName: string;
      /** Format: uuid */
      employerId?: string;
      phoneNumber?: string;
      idUploaded?: boolean;
      /** @default false */
      spareEmailValidated: boolean;
      /** @default false */
      emailValidated: boolean;
      gaKey?: string;
      status?: string;
      /** @default [] */
      applications: {
        country?: string;
        /** Format: date-time */
        purchaseDate?: string;
        city?: string;
        nameChangeLastName?: Record<string, never>;
        nameChangeDocType?: Record<string, never>;
        nameChangeReason?: Record<string, never>;
        idS3LocationSecondary?: string;
        promoCode?: Record<string, never>;
        verificationMethod?: string;
        applicationReason: ('SIGNUP' | 'RENEWAL' | 'NAME_CHANGE' | 'LOST_CARD' | 'REPRINT') | never;
        /** @enum {string} */
        paymentStatus?:
          | 'AWAITING_PAYMENT'
          | 'PAID_CARD'
          | 'PAID_PAYPAL'
          | 'PAID_PROMO_CODE'
          | 'PAID_CHEQUE'
          | 'PAID_ADMIN'
          | 'PENDING_REFUND'
          | 'REFUNDED';
        /** Format: uuid */
        memberId: string;
        idS3LocationPrimary?: string;
        address2?: string;
        address1?: string;
        postcode?: string;
        /** @enum {string} */
        eligibilityStatus?:
          | 'INELIGIBLE'
          | 'AWAITING_ID_APPROVAL'
          | 'ASSIGNED_FOR_APPROVAL'
          | 'ELIGIBLE';
        promoCodeApplied?: boolean;
        trustedDomainValidated?: boolean;
        nameChangeFirstName?: Record<string, never>;
        /** Format: uuid */
        applicationId: string;
        rejectionReason?:
          | (
              | 'DECLINE_INCORRECT_ID'
              | 'PICTURE_DECLINE_ID'
              | 'DL_PP_DECLINE_ID'
              | 'DATE_DECLINE_ID'
              | 'BLURRY_IMAGE_DECLINE_ID'
              | 'DIFFERENT_NAME_DECLINE_ID'
              | 'PASSWORD_PROTECTED_DECLINE_ID'
              | 'DECLINE_NOT_ELIGIBLE'
            )
          | never;
        /** Format: date-time */
        startDate?: string;
        trustedDomainEmail?: string;
        cardNumber?: string;
      }[];
    };
    /** EmailChangeModel */
    EmailChangeModel: {
      /** Format: email */
      newEmail: string;
      /** Format: email */
      currentEmail: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;
export type operations = Record<string, never>;
