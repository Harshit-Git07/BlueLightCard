name: Offers
on:
  push:
    branches:
      - main
    paths:
      - packages/api/offers/**
      - packages/api/offers/CHANGELOG.md
      - packages/api/core/**
      - stacks/**
      - .github/workflows/offers.yml
      - package-lock.json
      - sst.config.ts
      - package.json
  pull_request:
    paths:
      - packages/api/offers/**
      - packages/api/offers/CHANGELOG.md
      - packages/api/core/**
      - stacks/**
      - .github/workflows/offers.yml
      - package-lock.json
      - sst.config.ts
      - package.json

permissions: write-all

jobs:
  install:
    name: Install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
        with:
          restore_cache: false
          token: ${{ secrets.GITHUB_TOKEN }}
  test:
    name: Test
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
      - name: Run Tests
        run: npm run test -w packages/api/offers

  changelog:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    name: Changelog
    runs-on: ubuntu-latest
    outputs:
      releases_created: ${{ steps.tag-release.outputs.releases_created }}
    steps:
      - uses: googleapis/release-please-action@v3
        id: tag-release
        with:
          path: packages/api/offers
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: node
          monorepo-tags: true
          package-name: bluelightcard/offers
          changelog-types: '[{"type":"feat","section":"Features","hidden":false},{"type":"fix","section":"Bug Fixes","hidden":false},{"type":"chore","section":"Other Changes","hidden":false},{"type":"refactor","section":"Other Changes","hidden":false}]'

  build:
    name: Build
    runs-on: ubuntu-latest
    needs:
      - install
      - test
      - changelog
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
      - name: Build
        run: npm run build

  staging:
    name: Staging Deployment
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - deployment: 'blc-uk-staging'
            region: 'eu-west-2'
            stagingBaseUrl: https://staging.bluelightcard.co.uk
            legacyApiRetrieveOffersEndpoint: api/4/offer/retrieve.php
            offersHomepageMenuBrandPrefix: blc-uk
            cdnUrl: 'https://blcimg-dev.img.bluelightcard.co.uk'
            brand: BLC_UK
            stage: staging
          - deployment: 'dds-uk-staging'
            region: 'eu-west-2'
            stagingBaseUrl: https://www.ddsstaging.bluelightcard.tech
            legacyApiRetrieveOffersEndpoint: api/4/offer/retrieve.php
            offersHomepageMenuBrandPrefix: dds-uk
            cdnUrl: 'https://ddsimgdev.s3.eu-west-2.amazonaws.com'
            brand: DDS_UK
            stage: staging-dds
          - deployment: 'blc-aus-staging'
            region: 'ap-southeast-2'
            stagingBaseUrl: https://develop.bluelightcard.com.au
            legacyApiRetrieveOffersEndpoint: api/4/offer/retrieve.php
            offersHomepageMenuBrandPrefix: blc-aus
            cdnUrl: 'https://blc-au-img-dev.s3.ap-southeast-2.amazonaws.com'
            brand: BLC_AU
            stage: staging
    needs:
      - install
      - test
      - build
      - changelog
    env:
      STAGING_BASE_URL: ${{matrix.stagingBaseUrl}}
      LEGACY_API_RETRIEVE_OFFERS_ENDPOINT: ${{matrix.legacyApiRetrieveOffersEndpoint}}
      OFFERS_HOMEPAGE_MENU_BRAND_PREFIX: ${{matrix.offersHomepageMenuBrandPrefix}}
      CDN_URL: ${{matrix.cdnUrl}}
      BRAND: ${{matrix.brand}}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
      - name: Configure Non Prod AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::314658777488:role/github-actions-role
          aws-region: ${{matrix.region}}
      - name: Build
        run: npm run build
      - name: Get Service Tags
        run: |
          echo "DD_VERSION=$(date +%m-%d-%Y)-$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "DD_ENV=staging" >> $GITHUB_ENV
          echo "DD_GIT_COMMIT_SHA=$(git rev-parse HEAD)" >> $GITHUB_ENV
          echo "DD_GIT_REPOSITORY_URL=https://github.com/${{ github.repository }}" >> $GITHUB_ENV
      - name: Deploy Stack
        env:
          DD_VERSION: '${{ env.DD_VERSION }}'
          DD_ENV: '${{ env.DD_ENV }}'
          DD_GIT_COMMIT_SHA: '${{ env.DD_GIT_COMMIT_SHA }}'
          DD_GIT_REPOSITORY_URL: '${{ env.DD_GIT_REPOSITORY_URL }}'
          DD_API_KEY: '${{ secrets.DATADOG_AWS_INSTRUMENTATION_TOKEN }}'
          USE_DATADOG_AGENT: 'true'
        run: npx sst deploy global --stage ${{matrix.stage}} --region ${{matrix.region}} && npx sst deploy offers --stage ${{matrix.stage}} --region ${{matrix.region}}
      - name: Datadog deployment metrics
        uses: ./.github/actions/datadog
        with:
          environment: 'staging'
          service_name: 'offers'
          workflow_run_id: ${{ github.run_id }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DATADOG_DORA_METRICS_CLIENT_TOKEN: ${{ secrets.DATADOG_DORA_METRICS_CLIENT_TOKEN }}

  release:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && needs.changelog.outputs.releases_created
    name: Release
    environment: Production
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - namespace: 'blc-uk-production'
            region: 'eu-west-2'
            prodBaseUrl: https://www.bluelightcard.co.uk
            legacyApiRetrieveOffersEndpoint: api/4/offer/retrieve.php
            offersHomepageMenuBrandPrefix: blc-uk
            cdnUrl: 'https://cdn.bluelightcard.co.uk'
            brand: BLC_UK
            stage: production
# Uncomment when ready to deploy dds offers stack to production
#          - deployment: 'dds-uk-production'
#            region: 'eu-west-2'
#            prodBaseUrl: https://www.defencediscountservice.co.uk
#            legacyApiRetrieveOffersEndpoint: api/4/offer/retrieve.php
#            offersHomepageMenuBrandPrefix: dds-uk
#            cdnUrl: 'https://cdn.defencediscountservice.co.uk'
#            brand: DDS_UK
#            stage: production-dds
          - namespace: 'blc-aus-production'
            region: 'ap-southeast-2'
            prodBaseUrl: https://www.bluelightcard.com.au
            legacyApiRetrieveOffersEndpoint: api/4/offer/retrieve.php
            offersHomepageMenuBrandPrefix: blc-aus
            cdnUrl: 'https://cdn.bluelightcard.com.au'
            brand: BLC_AU
            stage: production
    needs:
      - install
      - test
      - staging
      - changelog
      - build
    env:
      PROD_BASE_URL: ${{matrix.prodBaseUrl}}
      LEGACY_API_RETRIEVE_OFFERS_ENDPOINT: ${{matrix.legacyApiRetrieveOffersEndpoint}}
      OFFERS_HOMEPAGE_MENU_BRAND_PREFIX: ${{matrix.offersHomepageMenuBrandPrefix}}
      CDN_URL: ${{matrix.cdnUrl}}
      BRAND: ${{matrix.brand}}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
      - name: Configure Prod AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{matrix.region}}
          role-to-assume: arn:aws:iam::676719682338:role/github-action-role
      - name: Build
        run: npm run build
      - name: Deploy Stack
        run: npx sst deploy global --stage ${{matrix.stage}} --region ${{matrix.region}} && npx sst deploy offers --stage ${{matrix.stage}} --region ${{matrix.region}}
      - name: Datadog deployment metrics
        uses: ./.github/actions/datadog
        with:
          environment: 'production'
          service_name: 'offers'
          workflow_run_id: ${{ github.run_id }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DATADOG_DORA_METRICS_CLIENT_TOKEN: ${{ secrets.DATADOG_DORA_METRICS_CLIENT_TOKEN }}
