name: Pull Request Ephemeral Environment

on:
  pull_request:
    types: [labeled, synchronize]

permissions:
  contents: write
  pull-requests: write
  id-token: write
  deployments: write

env:
  PR_PREFIX: pr-${{ github.event.pull_request.number }}-blc-mono
  PR_PREFIX_DDS: pr-${{ github.event.pull_request.number }}-blc-mono-dds

jobs:
  install:
    name: Install
    runs-on: ubuntu-latest
    if: ${{ github.event.label.name == 'ready-for-test' || contains(github.event.pull_request.labels.*.name, 'ready-for-test')}}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
        with:
          restore_cache: false
          token: ${{ secrets.GITHUB_TOKEN }}

  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      backend-shared: ${{ steps.filter.outputs.backend-shared }}
      backend-offers: ${{ steps.filter.outputs.backend-offers }}
      backend-redemptions: ${{ steps.filter.outputs.backend-redemptions }}
      backend-discovery: ${{ steps.filter.outputs.backend-discovery }}
      backend-members: ${{ steps.filter.outputs.backend-members }}
      frontend-hybrid: ${{ steps.filter.outputs.frontend-hybrid }}
    steps:
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            backend-shared:
              - packages/api/discovery/**
              - packages/api/offers/**
              - packages/api/offers-cms/**
              - packages/api/members/**
              - packages/api/redemptions/**
              - packages/api/identity/**
              - packages/api/core/**
              - stacks/**
              - .github/workflows/pr-environment.yml
              - package-lock.json
              - sst.config.ts
              - package.json
            backend-offers:
              - packages/api/offers/**
              - packages/api/offers-cms/**
              - packages/api/core/**
              - stacks/**
              - .github/workflows/pr-environment.yml
              - package-lock.json
              - sst.config.ts
              - package.json
            backend-redemptions:
              - packages/api/redemptions/**
              - packages/api/core/**
              - stacks/**
              - .github/workflows/pr-environment.yml
              - package-lock.json
              - sst.config.ts
              - package.json
            backend-discovery:
              - packages/api/discovery/**
              - packages/api/core/**
              - stacks/**
              - .github/workflows/pr-environment.yml
              - package-lock.json
              - sst.config.ts
              - package.json
            backend-members:
              - packages/api/members/**
              - packages/api/core/**
              - stacks/**
              - .github/workflows/pr-environment.yml
              - package-lock.json
              - sst.config.ts
              - package.json
            frontend-hybrid:
              - packages/mobile-hybrid/**
              - packages/shared-ui/**
              - .github/workflows/pr-environment.yml
              - package-lock.json
              - package.json

  backend-shared:
    needs:
      - changes
      - install
    name: Deploy Backend for PR (global & identity)
    if: ${{ (needs.changes.outputs.backend-shared == 'true' || needs.changes.outputs.backend-discovery == 'true' || needs.changes.outputs.backend-offers == 'true' || needs.changes.outputs.backend-redemptions == 'true' || needs.changes.outputs.backend-members == 'true' ) && github.actor != 'dependabot[bot]'}}
    runs-on: ubuntu-latest
    outputs:
      identity-api-endpoint: ${{ steps.sst-identity-outputs.outputs.identityApiUrl }}
      identity-api-id: ${{ steps.sst-identity-outputs.outputs.identityApiId }}
      blc-uk-cognito-user-pool-id: ${{ steps.sst-identity-outputs.outputs.blcUkCognitoUserPoolId }}
      blc-uk-old-cognito-user-pool-id: ${{ steps.sst-identity-outputs.outputs.blcUkOldCognitoUserPoolId }}
      dds-cognito-user-pool-id: ${{ steps.sst-identity-outputs.outputs.ddsUkCognitoUserPoolId }}
      dds-old-cognito-user-pool-id: ${{ steps.sst-identity-outputs.outputs.ddsUkOldCognitoUserPoolId }}
      dds-identity-cognito-e2e-client-id: ${{ steps.sst-identity-outputs.outputs.ddsIdentityCognitoE2eClientId }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
      - name: Configure Non Prod AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::982534385136:role/github-actions-role
          aws-region: eu-west-2
      # TODO: Should the build be cached?
      - run: npm run build
      - name: Deploy Global
        env:
          BRAND: BLC_UK
        run: npx sst deploy global --stage $PR_PREFIX
      - name: Deploy Identity
        env:
          BRAND: BLC_UK
        run: npx sst deploy identity --stage $PR_PREFIX
      - name: Extract Identity URL
        id: sst-identity-outputs
        run: |
          cat .sst/outputs.json
          IDENTITY_URL=$(jq -r '.[].IdentityApiEndpoint | select(. != null)' .sst/outputs.json)
          BLC_UK_IDENTITY_API_ID=$(jq -r '.[].IdentityApiId | select(. != null)' .sst/outputs.json)
          BLC_UK_COGNITO_USER_POOL_ID=$(jq -r '.[].BlcUkCognitoUserPoolId | select(. != null)' .sst/outputs.json)
          BLC_UK_OLD_COGNITO_USER_POOL_ID=$(jq -r '.[].BlcUkOldCognitoUserPoolId | select(. != null)' .sst/outputs.json)
          DDS_COGNITO_USER_POOL_ID=$(jq -r '.[].DdsUkCognitoUserPoolId | select(. != null)' .sst/outputs.json)
          DDS_OLD_COGNITO_USER_POOL_ID=$(jq -r '.[].DdsUkOldCognitoUserPoolId | select(. != null)' .sst/outputs.json)
          DDS_IDENTITY_COGNITO_E2E_CLIENT_ID=$(jq -r '.[].DdsIdentityCognitoE2eClientId | select(. != null)' .sst/outputs.json)
          echo "identityApiUrl=$IDENTITY_URL" >> $GITHUB_OUTPUT
          echo "identityApiId=$BLC_UK_IDENTITY_API_ID" >> $GITHUB_OUTPUT
          echo "blcUkCognitoUserPoolId=$BLC_UK_COGNITO_USER_POOL_ID" >> $GITHUB_OUTPUT
          echo "blcUkOldCognitoUserPoolId=$BLC_UK_OLD_COGNITO_USER_POOL_ID" >> $GITHUB_OUTPUT
          echo "ddsUkCognitoUserPoolId=$DDS_COGNITO_USER_POOL_ID" >> $GITHUB_OUTPUT
          echo "ddsUkOldCognitoUserPoolId=$DDS_OLD_COGNITO_USER_POOL_ID" >> $GITHUB_OUTPUT
          echo "ddsIdentityCognitoE2eClientId=$DDS_IDENTITY_COGNITO_E2E_CLIENT_ID" >> $GITHUB_OUTPUT
      - name: Echo outputs
        run: |
          echo ${{ steps.sst-identity-outputs.outputs.identityApiUrl }}
          echo ${{ steps.sst-identity-outputs.outputs.identityApiId }}
          echo ${{ steps.sst-identity-outputs.outputs.blcUkCognitoUserPoolId }}
          echo ${{ steps.sst-identity-outputs.outputs.blcUkOldCognitoUserPoolId }}
          echo ${{ steps.sst-identity-outputs.outputs.ddsUkCognitoUserPoolId }}
          echo ${{ steps.sst-identity-outputs.outputs.ddsUkOldCognitoUserPoolId }}
          echo ${{ steps.sst-identity-outputs.outputs.ddsIdentityCognitoE2eClientId }}

  backend-shared-dds:
    needs:
      - changes
      - install
      - backend-shared
    name: Deploy DDS Backend for PR (global & identity)
    if: ${{ contains(github.event.pull_request.labels.*.name, 'ready-for-test') && contains(github.event.pull_request.labels.*.name, 'dds-ready-for-test')}}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
      - name: Configure Non Prod AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::982534385136:role/github-actions-role
          aws-region: eu-west-2
      - run: npm run build
      - name: Deploy DDS Global
        env:
          BRAND: DDS_UK
          BLC_UK_COGNITO_USER_POOL_ID: ${{ needs.backend-shared.outputs.blc-uk-cognito-user-pool-id }}
          BLC_UK_OLD_COGNITO_USER_POOL_ID: ${{ needs.backend-shared.outputs.blc-uk-old-cognito-user-pool-id }}
          DDS_COGNITO_USER_POOL_ID: ${{ needs.backend-shared.outputs.dds-cognito-user-pool-id }}
          DDS_OLD_COGNITO_USER_POOL_ID: ${{ needs.backend-shared.outputs.dds-old-cognito-user-pool-id }}
          BLC_UK_IDENTITY_API_ID: ${{ needs.backend-shared.outputs.identity-api-id }}
        run: npx sst deploy global --stage $PR_PREFIX_DDS
      - name: Deploy DDS Identity
        env:
          BRAND: DDS_UK
          BLC_UK_COGNITO_USER_POOL_ID: ${{ needs.backend-shared.outputs.blc-uk-cognito-user-pool-id }}
          BLC_UK_OLD_COGNITO_USER_POOL_ID: ${{ needs.backend-shared.outputs.blc-uk-old-cognito-user-pool-id }}
          DDS_COGNITO_USER_POOL_ID: ${{ needs.backend-shared.outputs.dds-cognito-user-pool-id }}
          DDS_OLD_COGNITO_USER_POOL_ID: ${{ needs.backend-shared.outputs.dds-old-cognito-user-pool-id }}
          BLC_UK_IDENTITY_API_ID: ${{ needs.backend-shared.outputs.identity-api-id }}
        run: npx sst deploy identity --stage $PR_PREFIX_DDS

  backend-offers:
    needs:
      - changes
      - install
      - backend-shared
    name: Deploy Backend for PR (offers)
    if: ${{ needs.changes.outputs.backend-offers == 'true' && github.actor != 'dependabot[bot]' }}
    runs-on: ubuntu-latest
    env:
      DEV_BASE_URL: http://localhost:8080
      LEGACY_API_RETRIEVE_OFFERS_ENDPOINT: api/4/offer/retrieve.php
      OFFERS_HOMEPAGE_MENU_BRAND_PREFIX: blc-uk
      CDN_URL: https://blcimg-dev.img.bluelightcard.co.uk
    outputs:
      offers-api-endpoint: ${{ steps.sst-offers-outputs.outputs.offersApiUrl }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
      - name: Configure Non Prod AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::982534385136:role/github-actions-role
          aws-region: eu-west-2
      - run: npm run build
      - name: Deploy Offers
        env:
          BRAND: BLC_UK
        run: npx sst deploy offers --stage $PR_PREFIX
      - name: Extract Api URL and set output
        id: sst-offers-outputs
        run: |
          cat .sst/outputs.json
          OFFERS_URL=$(jq -r '.[].OffersApiEndpoint | select(. != null)' .sst/outputs.json)
          echo "offersApiUrl=$OFFERS_URL" >> $GITHUB_OUTPUT
      - name: Echo outputs
        run: |
          echo ${{ steps.sst-offers-outputs.outputs.offersApiUrl }}

  backend-offers-dds:
    needs:
      - changes
      - install
      - backend-shared-dds
    name: Deploy DDS Backend for PR (offers)
    if: ${{ needs.changes.outputs.backend-offers == 'true' && github.actor != 'dependabot[bot]' && contains(github.event.pull_request.labels.*.name, 'ready-for-test') && contains(github.event.pull_request.labels.*.name, 'dds-ready-for-test')}}
    runs-on: ubuntu-latest
    env:
      DEV_BASE_URL: http://localhost:8080
      LEGACY_API_RETRIEVE_OFFERS_ENDPOINT: api/4/offer/retrieve.php
      OFFERS_HOMEPAGE_MENU_BRAND_PREFIX: dds-uk
      CDN_URL: https://ddsimgdev.s3.eu-west-2.amazonaws.com
    outputs:
      offers-api-endpoint: ${{ steps.sst-offers-dds-outputs.outputs.ddsOffersApiUrl }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
      - name: Configure Non Prod AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::982534385136:role/github-actions-role
          aws-region: eu-west-2
      - run: npm run build
      - name: Deploy Offers
        env:
          BRAND: BLC_UK
        run: npx sst deploy offers --stage $PR_PREFIX_DDS
      - name: Extract Api URL and set output
        id: sst-offers-dds-outputs
        run: |
          cat .sst/outputs.json
          DDS_OFFERS_URL=$(jq -r '.[].OffersApiEndpoint | select(. != null)' .sst/outputs.json)
          echo "ddsOffersApiUrl=$DDS_OFFERS_URL" >> $GITHUB_OUTPUT
      - name: Echo outputs
        run: |
          echo ${{ steps.sst-offers-dds-outputs.outputs.ddsOffersApiUrl }}

  backend-redemptions:
    needs:
      - changes
      - install
      - backend-shared
    name: Deploy Backend for PR (redemptions)
    if: ${{ needs.changes.outputs.backend-redemptions == 'true' && github.actor != 'dependabot[bot]' }}
    runs-on: ubuntu-latest
    outputs:
      redemptions-api-endpoint: ${{ steps.sst-redemptions-outputs.outputs.redemptionsApiUrl }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
      - name: Configure Non Prod AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::982534385136:role/github-actions-role
          aws-region: eu-west-2
      - run: npm run build
      - name: Deploy Redemptions
        env:
          BRAND: BLC_UK
        run: npx sst deploy redemptions --stage $PR_PREFIX
      - name: Extract Api URL and set output
        id: sst-redemptions-outputs
        run: |
          cat .sst/outputs.json
          REDEMPTION_URL=$(jq -r '.[].RedemptionsApiEndpoint | select(. != null)' .sst/outputs.json)
          echo "redemptionsApiUrl=$REDEMPTION_URL" >> $GITHUB_OUTPUT
      - name: Echo outputs
        run: |
          echo ${{ steps.sst-redemptions-outputs.outputs.redemptionsApiUrl }}

  backend-discovery:
    needs:
      - changes
      - install
      - backend-shared
    name: Deploy Backend for PR (discovery)
    if: ${{ needs.changes.outputs.backend-discovery == 'true' && github.actor != 'dependabot[bot]' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        region: ['eu-west-2']
    outputs:
      discovery-api-endpoint: ${{ steps.sst-discovery-outputs.outputs.discoveryApiUrl }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
      - name: Configure Non Prod AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::982534385136:role/github-actions-role
          aws-region: ${{matrix.region}}
      - run: npm run build
      - name: Deploy Discovery
        env:
          BRAND: BLC_UK
          OPENSEARCH_CREATE_NEW_DOMAIN: ${{ github.event.label.name == 'createNewOpenSearchDomain' && 'true' || 'false' }}
        run: npx sst deploy discovery --stage $PR_PREFIX --region ${{matrix.region}}
      - name: Extract Api URL and set output
        id: sst-discovery-outputs
        run: |
          cat .sst/outputs.json
          DISCOVERY_URL=$(jq -r '.[].DiscoveryApiEndpoint | select(. != null)' .sst/outputs.json)
          echo "discoveryApiUrl=$DISCOVERY_URL" >> $GITHUB_OUTPUT
      - name: Echo outputs
        run: |
          echo ${{ steps.sst-discovery-outputs.outputs.discoveryApiUrl }}

  backend-discovery-dds:
    needs:
      - changes
      - install
      - backend-shared
      - backend-shared-dds
    name: Deploy DDS Backend for PR (discovery)
    if: ${{ needs.changes.outputs.backend-discovery == 'true' && github.actor != 'dependabot[bot]' && contains(github.event.pull_request.labels.*.name, 'ready-for-test') && contains(github.event.pull_request.labels.*.name, 'dds-ready-for-test')}}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        region: ['eu-west-2']
    outputs:
      discovery-api-endpoint: ${{ steps.sst-discovery-dds-outputs.outputs.ddsDiscoveryApiUrl }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
      - name: Configure Non Prod AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::982534385136:role/github-actions-role
          aws-region: ${{matrix.region}}
      - run: npm run build
      - name: Build Discovery DDS
        env:
          BRAND: DDS_UK
          IDENTITY_TABLE_NAME: pr-${{ github.event.pull_request.number }}-blc-mono-identityTable
          OPENSEARCH_CREATE_NEW_DOMAIN: ${{ github.event.label.name == 'createNewOpenSearchDomain' && 'true' || 'false' }}
          BLC_UK_COGNITO_USER_POOL_ID: ${{ needs.backend-shared.outputs.blc-uk-cognito-user-pool-id }}
          BLC_UK_OLD_COGNITO_USER_POOL_ID: ${{ needs.backend-shared.outputs.blc-uk-old-cognito-user-pool-id }}
          DDS_COGNITO_USER_POOL_ID: ${{ needs.backend-shared.outputs.dds-cognito-user-pool-id }}
          DDS_OLD_COGNITO_USER_POOL_ID: ${{ needs.backend-shared.outputs.dds-old-cognito-user-pool-id }}
          BLC_UK_IDENTITY_API_ID: ${{ needs.backend-shared.outputs.identity-api-id }}
        run: npx sst deploy discovery --stage $PR_PREFIX_DDS --region ${{matrix.region}}
      - name: Extract Api URL and set output
        id: sst-discovery-dds-outputs
        run: |
          cat .sst/outputs.json
          DDS_DISCOVERY_URL=$(jq -r '.[].DiscoveryApiEndpoint | select(. != null)' .sst/outputs.json)
          echo "ddsDiscoveryApiUrl=$DDS_DISCOVERY_URL" >> $GITHUB_OUTPUT
      - name: Echo outputs
        run: |
          echo ${{ steps.sst-discovery-dds-outputs.outputs.ddsDiscoveryApiUrl }}

  backend-members:
    needs:
      - changes
      - install
      - backend-shared
    name: Deploy Backend for PR (members)
    if: ${{ needs.changes.outputs.backend-members == 'true' && github.actor != 'dependabot[bot]' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - deployment: 'blc-uk-pr'
            region: 'eu-west-2'
            brand: BLC_UK
            brazeSecret: BLC_UK_BRAZE_SERVICE_JSON
    outputs:
      members-api-endpoint: ${{ steps.sst-members-outputs.outputs.membersApiUrl }}
      members-admin-api-endpoint: ${{ steps.sst-members-outputs.outputs.membersAdminApiUrl }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
      - name: Configure Non Prod AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::982534385136:role/github-actions-role
          aws-region: ${{matrix.region}}
      - run: npm run build
      - name: Deploy Members
        env:
          BRAND: ${{ matrix.brand }}
          SKIP_MEMBERS_STACK: false
          SERVICE_LAYER_EVENTS_ENABLED_GLOBAL: true
          SERVICE_LAYER_EVENTS_ENABLED_BRAZE: false
          SERVICE_LAYER_EVENTS_ENABLED_DWH: false
          SERVICE_LAYER_EVENTS_ENABLED_EMAIL: true
          SERVICE_LAYER_EVENTS_ENABLED_LEGACY: false
          SERVICE_LAYER_EVENTS_ENABLED_SYSTEM: true
          SERVICE_LAYER_EVENTS_ENABLED_PAYMENT: true
        run: npx sst deploy members members-api members-admin-api --stage $PR_PREFIX --region ${{matrix.region}}
      - name: Extract Api URL and set output
        id: sst-members-outputs
        run: |
          cat .sst/outputs.json
          MEMBERS_URL=$(jq -r '.[].MembersApiEndpoint | select(. != null)' .sst/outputs.json)
          MEMBERS_ADMIN_URL=$(jq -r '.[].MembersAdminApiEndpoint | select(. != null)' .sst/outputs.json)
          echo "membersApiUrl=$MEMBERS_URL" >> $GITHUB_OUTPUT
          echo "membersAdminApiUrl=$MEMBERS_ADMIN_URL" >> $GITHUB_OUTPUT
      - name: Echo outputs
        run: |
          echo ${{ steps.sst-members-outputs.outputs.membersApiUrl }}
          echo ${{ steps.sst-members-outputs.outputs.membersAdminApiUrl }}
      - name: Load Test data
        working-directory: packages/api/members
        env:
          SST_STAGE: ${{ env.PR_PREFIX }}
        run: |
          npm run loadTestData

  backend-members-dds:
    needs:
      - changes
      - install
      - backend-shared
      - backend-shared-dds
    name: Deploy DDS Backend for PR (members)
    if: ${{ needs.changes.outputs.backend-members == 'true' && github.actor != 'dependabot[bot]' && contains(github.event.pull_request.labels.*.name, 'ready-for-test') && contains(github.event.pull_request.labels.*.name, 'dds-ready-for-test')}}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - deployment: 'dds-uk-pr'
            region: 'eu-west-2'
            brand: DDS_UK
            brazeSecret: DDS_UK_BRAZE_SERVICE_JSON
    outputs:
      members-api-endpoint: ${{ steps.sst-members-dds-outputs.outputs.membersApiUrl }}
      members-admin-api-endpoint: ${{ steps.sst-members-dds-outputs.outputs.ddsMembersAdminApiUrl }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
      - name: Configure Non Prod AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::982534385136:role/github-actions-role
          aws-region: ${{matrix.region}}
      - run: npm run build
      - name: Deploy Members DDS
        env:
          BRAND: ${{ matrix.brand }}
          SKIP_MEMBERS_STACK: false
          BRAZE_SERVICE_JSON: ${{ secrets[matrix.brazeSecret] }}
          BLC_UK_COGNITO_USER_POOL_ID: ${{ needs.backend-shared.outputs.blc-uk-cognito-user-pool-id }}
          BLC_UK_OLD_COGNITO_USER_POOL_ID: ${{ needs.backend-shared.outputs.blc-uk-old-cognito-user-pool-id }}
          DDS_COGNITO_USER_POOL_ID: ${{ needs.backend-shared.outputs.dds-cognito-user-pool-id }}
          DDS_OLD_COGNITO_USER_POOL_ID: ${{ needs.backend-shared.outputs.dds-old-cognito-user-pool-id }}
          BLC_UK_IDENTITY_API_ID: ${{ needs.backend-shared.outputs.identity-api-id }}
        run: npx sst deploy members members-api members-admin-api --stage $PR_PREFIX_DDS --region ${{matrix.region}}
      - name: Extract Api URL and set output
        id: sst-members-dds-outputs
        run: |
          cat .sst/outputs.json
          DDS_MEMBERS_URL=$(jq -r '.[].MembersApiEndpoint | select(. != null)' .sst/outputs.json)
          DDS_MEMBERS_ADMIN_URL=$(jq -r '.[].MembersAdminApiEndpoint | select(. != null)' .sst/outputs.json)
          echo "ddsMembersApiUrl=$DDS_MEMBERS_URL" >> $GITHUB_OUTPUT
          echo "ddsMembersAdminApiUrl=$DDS_MEMBERS_ADMIN_URL" >> $GITHUB_OUTPUT
      - name: Echo outputs
        run: |
          echo ${{ steps.sst-members-dds-outputs.outputs.ddsMembersApiUrl }}
          echo ${{ steps.sst-members-dds-outputs.outputs.ddsMembersAdminApiUrl }}

  frontend-hybrid:
    name: Deploy Hybrid Frontend for PR ${{matrix.brand}}
    if: ${{ needs.changes.outputs.frontend-hybrid == 'true' && github.actor != 'dependabot[bot]' }}
    needs:
      - changes
      - install
    strategy:
      matrix:
        include:
          - brand: 'blc-uk'
            cloudflare_project_name: 'mobile-hybrid-blc-uk'
            offers_brand: 'blc-uk'
          - brand: 'blc-au'
            cloudflare_project_name: 'mobile-hybrid-blc-au'
            offers_brand: 'blc-aus'
          - brand: 'dds-uk'
            cloudflare_project_name: 'mobile-hybrid-dds'
            offers_brand: 'dds-4j3'
    runs-on: ubuntu-latest
    env:
      NEXT_PUBLIC_BRAND_URL: staging.bluelightcard.co.uk
      NEXT_PUBLIC_ENV: 'preview'
      NEXT_PUBLIC_USE_DEV_TOOLS: 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
      - name: Cache NextJS Build
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            ${{ github.workspace }}/packages/mobile-hybrid/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{matrix.brand}}-${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('packages/mobile-hybrid/**/*.[jt]s', 'packages/mobile-hybrid/**/*.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{matrix.brand}}-${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
      - name: Build
        run: npx sst types --stage $PR_PREFIX && npm run build -w packages/mobile-hybrid
        env:
          # BRAND env var is used for generating SST types, not sure if the types actually change per brand
          BRAND: BLC_UK
          NEXT_PUBLIC_APP_BRAND: ${{matrix.brand}}
      - name: Publish
        uses: cloudflare/pages-action@1
        id: cloudflare-publish
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{matrix.cloudflare_project_name}}
          branch: mobile-hybrid-pr-${{ github.event.pull_request.number }}
          directory: packages/mobile-hybrid/dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Find Comment
        uses: peter-evans/find-comment@v2
        if: success() && github.event.number
        id: fc
        with:
          issue-number: ${{ github.event.number }}
          body-includes: '🚀 Successfully deployed Hybrid preview environment for ${{matrix.brand}}'

      - name: Create Comment for Frontend ${{matrix.brand}}
        uses: peter-evans/create-or-update-comment@v4
        if: success() && github.event.number
        with:
          issue-number: ${{ github.event.number }}
          comment-id: ${{ steps.fc.outputs.comment-id }}
          edit-mode: replace
          body: |
            ## 🚀 Successfully deployed Hybrid preview environment for ${{matrix.brand}}

            <table><tr><td><strong>Latest commit:</strong> </td><td>
            <code>${{ github.sha }}</code>
            </td></tr>
            <tr><td><strong>Status:</strong></td><td>&nbsp;✅&nbsp; Deploy successful!</td></tr>
            <tr><td><strong>PR Preview URL:</strong></td><td>
            <a href='https://mobile-hybrid-pr-${{ github.event.pull_request.number }}.${{matrix.offers_brand}}.pages.dev'>https://mobile-hybrid-pr-${{ github.event.pull_request.number }}.${{matrix.offers_brand}}.pages.dev</a>
            </td></tr>
            <tr><td><strong>Specific Commit Preview URL:</strong></td><td>
            <a href='${{ steps.cloudflare-publish.outputs.url }}'>${{ steps.cloudflare-publish.outputs.url }}</a>
            </td></tr>
            <tr><td><strong>QA Test Environment Login Username</strong></td><td>
            <p>
              ${{ steps.seeding-script-outputs.outputs.testUsername}}
            </p>
            </td></tr>
            <tr><td><strong>QA Test Environment Login Password</strong></td><td>
            <p>
            ${{ steps.seeding-script-outputs.outputs.testPassword }}
            </p>
            </td></tr>
            </table>

  # Put comment on PR
  # This comment will only run if all environments are deployed which with the current implementation hardly every happens
  # Therefore the comment block will be separated to allow the separate comments to apply
  commentBackendShared:
    name: Comment Backend Shared on PR
    if: github.actor!= 'dependabot[bot]'
    runs-on: ubuntu-latest
    needs:
      - backend-shared
    steps:
      - name: Find Comment
        uses: peter-evans/find-comment@v3
        if: success() && github.event.number
        id: fc
        with:
          issue-number: ${{ github.event.number }}
          body-includes: '🚀 Successfully Backend Shared Preview Environment'

      - name: Create Comment
        uses: peter-evans/create-or-update-comment@v4
        if: success() && github.event.number
        with:
          issue-number: ${{ github.event.number }}
          comment-id: ${{ steps.fc.outputs.comment-id }}
          edit-mode: replace
          body: |
            ## 🚀 Successfully Backend Shared Preview Environment

            <table><tr><td><strong>Latest commit:</strong> </td><td>
            <code>${{ github.sha }}</code>
            <tr><td><strong>Identity API URL:</strong></td><td>
            <a href='${{ needs.backend-shared.outputs.identity-api-endpoint }}'>
              ${{ needs.backend-shared.outputs.identity-api-endpoint }}
            </a>
            </td></tr>
            </table>

  commentBackendOffers:
    name: Comment Backend Offers on PR
    if: github.actor!= 'dependabot[bot]'
    runs-on: ubuntu-latest
    needs:
      - backend-offers
    steps:
      - name: Find Comment
        uses: peter-evans/find-comment@v3
        if: success() && github.event.number
        id: fc
        with:
          issue-number: ${{ github.event.number }}
          body-includes: '🚀 Successfully Backend Offers Preview Environment'

      - name: Create Comment
        uses: peter-evans/create-or-update-comment@v4
        if: success() && github.event.number
        with:
          issue-number: ${{ github.event.number }}
          comment-id: ${{ steps.fc.outputs.comment-id }}
          edit-mode: replace
          body: |
            ## 🚀 Successfully Backend Offers Preview Environment

            <table><tr><td><strong>Latest commit:</strong> </td><td>
            <code>${{ github.sha }}</code>
            <tr><td><strong>Offers API URL:</strong></td><td>
            <a href='${{ needs.backend-offers.outputs.offers-api-endpoint }}'>
              ${{ needs.backend-offers.outputs.offers-api-endpoint }}
            </a>
            </td></tr>
            </table>

  commentBackendRedemptions:
    name: Comment Backend Redemptions on PR
    if: github.actor!= 'dependabot[bot]'
    runs-on: ubuntu-latest
    needs:
      - backend-redemptions
    steps:
      - name: Find Comment
        uses: peter-evans/find-comment@v3
        if: success() && github.event.number
        id: fc
        with:
          issue-number: ${{ github.event.number }}
          body-includes: '🚀 Successfully Backend Redemptions Preview Environment'

      - name: Create Comment
        uses: peter-evans/create-or-update-comment@v4
        if: success() && github.event.number
        with:
          issue-number: ${{ github.event.number }}
          comment-id: ${{ steps.fc.outputs.comment-id }}
          edit-mode: replace
          body: |
            ## 🚀 Successfully Backend Redemptions Preview Environment

            <table><tr><td><strong>Latest commit:</strong> </td><td>
            <code>${{ github.sha }}</code>
            </td></tr>
            <tr><td><strong>Redemptions API URL:</strong></td><td>
            <a href='${{ needs.backend-redemptions.outputs.redemptions-api-endpoint }}'>
              ${{ needs.backend-redemptions.outputs.redemptions-api-endpoint }}
            </a>
            </td></tr>
            </table>

  commentBackendDiscovery:
    name: Comment Backend Discovery on PR
    if: github.actor!= 'dependabot[bot]'
    runs-on: ubuntu-latest
    needs:
      - backend-discovery
    steps:
      - name: Find Comment
        uses: peter-evans/find-comment@v3
        if: success() && github.event.number
        id: fc
        with:
          issue-number: ${{ github.event.number }}
          body-includes: '🚀 Successfully Backend Discovery Preview Environment'

      - name: Create Comment
        uses: peter-evans/create-or-update-comment@v4
        if: success() && github.event.number
        with:
          issue-number: ${{ github.event.number }}
          comment-id: ${{ steps.fc.outputs.comment-id }}
          edit-mode: replace
          body: |
            ## 🚀 Successfully Backend Discovery Preview Environment

            <table><tr><td><strong>Latest commit:</strong> </td><td>
            <code>${{ github.sha }}</code>
            </td></tr>
            <tr><td><strong>Discovery API URL:</strong></td><td>
            <a href='${{ needs.backend-discovery.outputs.discovery-api-endpoint }}'>
              ${{ needs.backend-discovery.outputs.discovery-api-endpoint }}
            </a>
            </td></tr>
            </table>

  commentBackendMembers:
    name: Comment Backend Members on PR
    if: github.actor!= 'dependabot[bot]'
    runs-on: ubuntu-latest
    needs:
      - backend-members
    steps:
      - name: Find Comment
        uses: peter-evans/find-comment@v3
        if: success() && github.event.number
        id: fc
        with:
          issue-number: ${{ github.event.number }}
          body-includes: '🚀 Successfully Backend Members Preview Environment'

      - name: Create Comment
        uses: peter-evans/create-or-update-comment@v4
        if: success() && github.event.number
        with:
          issue-number: ${{ github.event.number }}
          comment-id: ${{ steps.fc.outputs.comment-id }}
          edit-mode: replace
          body: |
            ## 🚀 Successfully Backend Members Preview Environment

            <table>
            <tr>
            <td><strong>Latest commit:</strong></td>
            <td><code>${{ github.sha }}</code></td>
            </tr>
            <tr>
            <td><strong>Members API URL:</strong></td>
            <td>
            <a href='${{ needs.backend-members.outputs.members-api-endpoint }}'>
              ${{ needs.backend-members.outputs.members-api-endpoint }}
            </a>
            </td>
            </tr>
            <tr>
            <td><strong>Members Admin API URL:</strong></td>
            <td>
            <a href='${{ needs.backend-members.outputs.members-admin-api-endpoint }}'>
              ${{ needs.backend-members.outputs.members-admin-api-endpoint }}
            </a>
            </td>
            </tr>
            </table>

  e2e-redemptions:
    name: Run E2E tests (redemptions)
    runs-on: ubuntu-latest
    needs:
      - install
      - backend-redemptions
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
      - name: Configure Non Prod AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::982534385136:role/github-actions-role
          aws-region: eu-west-2
      - name: Install Session Manager Plugin
        run: |
          curl "https://s3.amazonaws.com/session-manager-downloads/plugin/latest/ubuntu_64bit/session-manager-plugin.deb" -o "session-manager-plugin.deb"
          sudo dpkg -i session-manager-plugin.deb
      - name: Run E2E tests
        working-directory: packages/api/redemptions
        env:
          BRAND: BLC_UK
          REDEMPTIONS_DATABASE_PORT: 5432
          REDEMPTIONS_DATABASE_NAME: redemptions
          REDEMPTIONS_DATABASE_TYPE: RDS_PG_SINGLE_INSTANCE
        run: npx sst bind --stage $PR_PREFIX --region eu-west-2 vitest

  e2e-identity:
    name: Run E2E tests (identity)
    runs-on: ubuntu-latest
    needs:
      - install
      - backend-shared
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
      - name: Configure Non Prod AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::982534385136:role/github-actions-role
          aws-region: eu-west-2
      - name: Run E2E Test
        working-directory: packages/api/identity
        env:
          BRAND: BLC_UK
        run: npx sst bind --stage $PR_PREFIX vitest e2e

  e2e-discovery:
    name: Run E2E tests (discovery)
    runs-on: ubuntu-latest
    needs:
      - install
      - backend-discovery
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
      - name: Configure Non Prod AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::982534385136:role/github-actions-role
          aws-region: eu-west-2
      - name: Run E2E tests
        working-directory: packages/api/discovery
        env:
          BRAND: BLC_UK
          REGION: eu-west-2
          E2E_TESTS_PASSWORD: ${{ secrets.E2E_TESTS_PASSWORD_BLC_UK }}
        run: npx sst bind --stage $PR_PREFIX vitest e2e

  e2e-discovery-dds:
    name: Run E2E tests (discovery-dds)
    if: ${{ needs.changes.outputs.backend-discovery == 'true' && github.actor != 'dependabot[bot]' && contains(github.event.pull_request.labels.*.name, 'ready-for-test') && contains(github.event.pull_request.labels.*.name, 'dds-ready-for-test')}}
    runs-on: ubuntu-latest
    needs:
      - install
      - backend-discovery-dds
      - backend-shared
      - backend-shared-dds
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
      - name: Configure Non Prod AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::982534385136:role/github-actions-role
          aws-region: eu-west-2
      - name: Run E2E tests
        working-directory: packages/api/discovery
        env:
          BRAND: DDS_UK
          REGION: eu-west-2
          BLC_UK_COGNITO_USER_POOL_ID: ${{ needs.backend-shared.outputs.blc-uk-cognito-user-pool-id }}
          BLC_UK_OLD_COGNITO_USER_POOL_ID: ${{ needs.backend-shared.outputs.blc-uk-old-cognito-user-pool-id }}
          DDS_COGNITO_USER_POOL_ID: ${{ needs.backend-shared.outputs.dds-cognito-user-pool-id }}
          DDS_OLD_COGNITO_USER_POOL_ID: ${{ needs.backend-shared.outputs.dds-old-cognito-user-pool-id }}
          BLC_UK_IDENTITY_API_ID: ${{ needs.backend-shared.outputs.identity-api-id }}
          IDENTITY_COGNITO_E2E_CLIENT_ID: ${{ needs.backend-shared.outputs.dds-identity-cognito-e2e-client-id }}
          IDENTITY_COGNITO_E2E_USER_POOL_ID: ${{ needs.backend-shared.outputs.dds-cognito-user-pool-id }}
          E2E_TESTS_PASSWORD: ${{ secrets.E2E_TESTS_PASSWORD_DDS_UK }}
        run: npx sst bind --stage $PR_PREFIX_DDS vitest e2e

  e2e-members:
    name: Run E2E tests (members)
    runs-on: ubuntu-latest
    needs:
      - install
      - backend-members
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
      - name: Configure Non Prod AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::982534385136:role/github-actions-role
          aws-region: eu-west-2
      - name: Run E2E tests
        working-directory: packages/api/members
        env:
          BRAND: BLC_UK
          REGION: eu-west-2
          E2E_TESTS_CLIENT_ID: ${{ secrets.E2E_TESTS_CLIENT_ID_BLC_UK }}
          E2E_TESTS_CLIENT_SECRET: ${{ secrets.E2E_TESTS_CLIENT_SECRET_BLC_UK }}
          E2E_TESTS_DOMAIN: https://blc-uk-staging.uk.auth0.com
        run: npx sst bind --stage $PR_PREFIX vitest e2e
