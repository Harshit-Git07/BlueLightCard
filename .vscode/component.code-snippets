{
	// Place your BlueLightCard-2.0 workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Component": {
		"scope": "javascript, typescript, typescriptreact",
		"prefix": "component",
		"body": [
			"import { useCSSMerge, useCSSConditional } from '../../hooks/useCSS';",
			"import { SharedProps, EnvVariant } from '../../types';",
			"import { FC } from 'react';",
			"",
			"export type Props = SharedProps;",
			"",
			"const ${TM_FILENAME_BASE/(.spec|.stories|.tsx)//}: FC<Props> = ({ envVariant = EnvVariant.Mobile }) => {",
			"\tconst dynCss = useCSSConditional({",
			"\t\t'': envVariant === EnvVariant.Desktop,",
			"\t});",
			"\tconst css = useCSSMerge('', dynCss);",
			"",
			"\treturn <div className={css}></div>;",
			"};",
			"",
			"export default ${TM_FILENAME_BASE/(.spec|.stories|.tsx)//};",
			""
		]
	}
}