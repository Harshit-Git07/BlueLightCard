{
	// Place your BlueLightCard-2.0 workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Component unit test": {
		"scope": "javascript, typescript, typescriptreact",
		"prefix": "test",
		"body": [
			"import { render } from '@testing-library/react';",
			"import ${TM_FILENAME_BASE/(.spec|.stories|.tsx)//}, { Props } from './';",
			"",
			"describe('${TM_FILENAME_BASE/(.spec|.stories|.tsx)//}', () => {",
			"\tlet props: Props;",
			"",
			"\tbeforeEach(() => {",
			"\t\tprops = {};",
			"\t});",
			"",
			"\tdescribe('smoke', () => {",
			"\t\tit('should render component without error', () => {",
			"\t\t\tconst { baseElement } = render(<${TM_FILENAME_BASE/(.spec|.stories|.tsx)//} {...props}></${TM_FILENAME_BASE/(.spec|.stories|.tsx)//}>);",
			"",
			"\t\t\texpect(baseElement).toBeDefined();",
			"\t\t});",
			"\t});",
			"});",
			""
		]
	}
}