name: 'Client'
on:
  push:
    branches:
      - main
    paths:
      - packages/client/**
      - package-lock.json
      - .github/workflows/client.yml
  pull_request:
    paths:
      - packages/client/**
      - package-lock.json
      - .github/workflows/client.yml

env:
  WHITE_LABEL_PROJECT: 'blc-white-label'
  STATIC_ASSETS_DIR: packages/client/dist

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - uses: bahmutov/npm-install@v1
        with:
          install-command: npm install --no-audit
      - run: npm test -w packages/client

  release_candidate:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    name: Release Candidate
    runs-on: ubuntu-latest
    outputs:
      releases_created: ${{ steps.tag-release.outputs.releases_created }}
    steps:
      - uses: GoogleCloudPlatform/release-please-action@v3
        id: tag-release
        with:
          path: packages/client
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: node
          monorepo-tags: true
          package-name: bluelightcard/client
          changelog-types: '[{"type":"feat","section":"Features","hidden":false},{"type":"fix","section":"Bug Fixes","hidden":false},{"type":"chore","section":"Other Changes","hidden":false},{"type":"refactor","section":"Other Changes","hidden":false}]'

  deploy:
    name: Deploy to Cloudflare Pages
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    needs:
      - test
    steps:
      - uses: actions/checkout@v3
      - uses: bahmutov/npm-install@v1
        with:
          install-command: npm install --no-audit
      - name: Build
        run: npm run build -w packages/client
      - name: Publish
        uses: cloudflare/pages-action@1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{ env.WHITE_LABEL_PROJECT }}
          directory: ${{ env.STATIC_ASSETS_DIR }}
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

