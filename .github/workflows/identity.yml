name: Identity
on:
  push:
    branches:
      - main
    paths:
      - packages/api/identity/**
      - packages/api/identity/CHANGELOG.md
      - stacks/**
      - .github/workflows/identity.yml
      - package-lock.json
      - sst.config.ts
      - package.json
  pull_request:
    paths:
      - packages/api/identity/**
      - packages/api/identity/CHANGELOG.md
      - stacks/**
      - .github/workflows/identity.yml
      - package-lock.json
      - sst.config.ts
      - package.json

permissions: write-all

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node_modules-${{hashFiles('package-lock.json')}}
          restore-keys: node_modules- # Take any latest cache if failed to find it for current yarn.lock
      - run: npm install
      - run: npm run test -w packages/api/identity
  changelog:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    name: Changelog
    runs-on: ubuntu-latest
    outputs:
      releases_created: ${{ steps.tag-release.outputs.releases_created }}
    steps:
      - uses: GoogleCloudPlatform/release-please-action@v3
        id: tag-release
        with:
          path: packages/api/identity
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: node
          monorepo-tags: true
          package-name: bluelightcard/identity
          changelog-types: '[{"type":"feat","section":"Features","hidden":false},{"type":"fix","section":"Bug Fixes","hidden":false},{"type":"chore","section":"Other Changes","hidden":false},{"type":"refactor","section":"Other Changes","hidden":false}]'
  build:
    name: Build
    runs-on: ubuntu-latest
    needs:
      - test
      - changelog
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node_modules-${{hashFiles('package-lock.json')}}
          restore-keys: node_modules- # Take any latest cache if failed to find it for current yarn.lock
      - run: npm install @esbuild/linux-x64 #run it here as locally the os is darwin and not linux, and only needed for github action
      - run: npm install
      - run: npm run build
  staging:
    name: Staging Deployment
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs:
      - test
      - build
      - changelog
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Configure Non Prod AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::314658777488:role/github-actions-role
          aws-region: eu-west-2
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node_modules-${{hashFiles('package-lock.json')}}
          restore-keys: node_modules- # Take any latest cache if failed to find it for current yarn.lock
      - run: npm install @esbuild/linux-x64 #run it here as locally the os is darwin and not linux, and only needed for github action
      - run: npm install
      - run: npm run build
      - name: Deploy
        run: npx sst deploy global --stage staging && npx sst deploy identity --stage staging
  release:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && needs.changelog.outputs.releases_created
    name: Release
    environment: Production
    runs-on: ubuntu-latest
    strategy:
      matrix:
        region: ['eu-west-2', 'ap-southeast-2']
    needs:
      - test
      - staging
      - changelog
      - build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Configure Prod AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-west-2
          role-to-assume: arn:aws:iam::676719682338:role/github-action-role
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node_modules-${{hashFiles('package-lock.json')}}
          restore-keys: node_modules- # Take any latest cache if failed to find it for current yarn.lock
      - run: npm install @esbuild/linux-x64 #run it here as locally the os is darwin and not linux, and only needed for github action
      - run: npm install
      - run: npm run build
      - name: Deploy
        run: npx sst deploy global --stage production --region ${{matrix.region}} && npx sst deploy identity --stage production --region ${{matrix.region}}
      - name: Record deployment with Oobeya
        run: |
          curl -XPOST -H 'Oobeya-API-Key: ${{ secrets.OOBEYA_API_KEY }}' -H "Content-type: application/json" -d '{
            "analysisId": "${{ secrets.OOBEYA_ANALYSIS_ID }}",
            "pipelineStartAt": "${{ github.event.push.pusher.date }}",
            "lastCommitSha": "${{ github.sha }}",
            "deploymentType": "RELEASE",
            "deployedAt": "${{ github.event.push.pusher.date }}",
            "author": "${{ github.actor }}",
            "name": "${{ needs.changelog.outputs.tag_name }}",
            "title": "${{ github.workflow }} ${{ needs.changelog.outputs.tag_name }}"
          }' 'https://bluelightcard.oobeya.io/apis/v1/deployments'
