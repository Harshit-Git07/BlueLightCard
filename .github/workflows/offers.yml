name: Offers
on:
  push:
    branches:
      - main
    paths:
      - packages/api/offers/**
      - packages/api/offers/CHANGELOG.md
      - packages/api/core/**
      - stacks/**
      - .github/workflows/offers.yml
      - package-lock.json
      - sst.config.ts
      - package.json
  pull_request:
    paths:
      - packages/api/offers/**
      - packages/api/offers/CHANGELOG.md
      - packages/api/core/**
      - stacks/**
      - .github/workflows/offers.yml
      - package-lock.json
      - sst.config.ts
      - package.json

permissions: write-all

jobs:
  install:
    name: Install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
        with:
          restore_cache: false
          token: ${{ secrets.GITHUB_TOKEN }}

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
      - name: Run Tests
        run: npm run test -w packages/api/offers

  changelog:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    name: Changelog
    runs-on: ubuntu-latest
    outputs:
      releases_created: ${{ steps.tag-release.outputs.releases_created }}
    steps:
      - uses: GoogleCloudPlatform/release-please-action@v3
        id: tag-release
        with:
          path: packages/api/offers
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: node
          monorepo-tags: true
          package-name: bluelightcard/offers
          changelog-types: '[{"type":"feat","section":"Features","hidden":false},{"type":"fix","section":"Bug Fixes","hidden":false},{"type":"chore","section":"Other Changes","hidden":false},{"type":"refactor","section":"Other Changes","hidden":false}]'

  build:
    name: Build
    runs-on: ubuntu-latest
    needs:
      - install
      - test
      - changelog
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
      - name: Build
        run: npm run build

  staging:
    name: Staging Deployment
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs:
      - install
      - test
      - build
      - changelog
    env:
      FIREHOSE_STREAM_APP_VIEW_STAGE: dwh-blc-p1-develop-compAppView
      FIREHOSE_STREAM_WEB_VIEW_STAGE: dwh-blc-p1-develop-compView
      STAGING_BASE_URL: https://staging.bluelightcard.co.uk
      LEGACY_API_RETRIEVE_OFFERS_ENDPOINT: api/4/offer/retrieve.php
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
      - name: Configure Non Prod AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::314658777488:role/github-actions-role
          aws-region: eu-west-2
      - name: Build
        run: npm run build
      - name: Deploy Stack
        run: npx sst deploy global --stage staging && npx sst deploy offers --stage staging
  release:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && needs.changelog.outputs.releases_created
    name: Release
    environment: Production
    runs-on: ubuntu-latest
    needs:
      - install
      - test
      - staging
      - changelog
      - build
    env:
      FIREHOSE_STREAM_APP_VIEW_PROD: dwh-blc-production-compAppView
      FIREHOSE_STREAM_WEB_VIEW_PROD: dwh-blc-production-compView
      PROD_BASE_URL: https://www.bluelightcard.co.uk
      LEGACY_API_RETRIEVE_OFFERS_ENDPOINT: api/4/offer/retrieve.php
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
      - name: Configure Prod AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-west-2
          role-to-assume: arn:aws:iam::676719682338:role/github-action-role
      - name: Build
        run: npm run build
      - name: Deploy Stack
        run: npx sst deploy global --stage production && npx sst deploy offers --stage production
