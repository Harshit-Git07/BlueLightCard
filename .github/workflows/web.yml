name: 'Web'
on:
  push:
    branches:
      - main
    paths:
      - packages/web/**
      - package-lock.json
      - sst.config.ts
      - package.json
      - .github/workflows/web.yml
  pull_request:
    paths:
      - packages/web/**
      - package-lock.json
      - sst.config.ts
      - package.json
      - .github/workflows/web.yml

env:
  FEATURE_FLAG_ENVIRONMENT_ID: ${{ vars.FEATURE_FLAG_ENVIRONMENT_ID }}
  CI: true

permissions: write-all

jobs:
  changes:
    name: Changes
    runs-on: ubuntu-latest
    outputs:
      components: ${{ steps.filter.outputs.components }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            components:
              - 'packages/web/src/common/components/**'
              - 'packages/web/src/offers/components/**'
  # Run all unit tests on merge to main
  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node_modules-${{hashFiles('package-lock.json')}}
          restore-keys: node_modules- # Take any latest cache if failed to find it for current yarn.lock
      - run: npm install
      - run: npm test -w packages/web

  e2e:
    name: E2E Tests
    runs-on: ubuntu-latest
    env:
      BASE_URL: https://www.staging.bluelightcard.co.uk 
      USERNAME: ${{ secrets.E2E_TESTS_USERNAME }}
      PASSWORD: ${{ secrets.E2E_TESTS_PASSWORD }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node_modules-${{hashFiles('package-lock.json')}}
          restore-keys: node_modules- # Take any latest cache if failed to find it for current yarn.lock
      - run: npm install
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - run: npm run test:e2e -w packages/web
      - run: npm run report:e2e -w packages/web
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: cucumber-report
          path: packages/web/e2e/test-results
          retention-days: 30

  lint:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node_modules-${{hashFiles('package-lock.json')}}
          restore-keys: node_modules- # Take any latest cache if failed to find it for current yarn.lock
      - run: npm install
      - name: JavaScript and Typescript
        run: npm run lint -w packages/web
      - name: Styles
        run: npm run lint:style -w packages/web

  pr_deploy_storybook:
    if: github.event_name == 'pull_request' && needs.changes.outputs.components == 'true'
    name: PR Deploy Storybook
    runs-on: ubuntu-latest
    needs:
      - changes
      - test
      - lint
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node_modules-${{hashFiles('package-lock.json')}}
          restore-keys: node_modules- # Take any latest cache if failed to find it for current yarn.lock
      - run: npm install
      - uses: chromaui/action-next@v1
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          workingDir: packages/web
          exitZeroOnChanges: false
          onlyChanged: true

  base_deploy_storybook:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && needs.changes.outputs.components == 'true'
    name: Base Deploy Storybook
    runs-on: ubuntu-latest
    needs:
      - changes
      - test
      - lint
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node_modules-${{hashFiles('package-lock.json')}}
          restore-keys: node_modules- # Take any latest cache if failed to find it for current yarn.lock
      - run: npm install
      - uses: chromaui/action-next@v1
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          workingDir: packages/web
          exitZeroOnChanges: false
          onlyChanged: true

  changelog:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    name: Changelog
    runs-on: ubuntu-latest
    outputs:
      releases_created: ${{ steps.tag-release.outputs.releases_created }}
    steps:
      - uses: GoogleCloudPlatform/release-please-action@v3
        id: tag-release
        with:
          path: packages/web
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: node
          monorepo-tags: true
          package-name: bluelightcard/web
          changelog-types: '[{"type":"feat","section":"Features","hidden":false},{"type":"fix","section":"Bug Fixes","hidden":false},{"type":"chore","section":"Other Changes","hidden":false},{"type":"refactor","section":"Other Changes","hidden":false}]'

  staging:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    name: Deploy Staging
    environment: Staging
    strategy:
      matrix:
        brand: ['blc-uk', 'blc-au', 'dds-uk']
    runs-on: ubuntu-latest
    needs:
      - test
      - lint
      - changelog
    env:
      NEXT_PUBLIC_AMPLITUDE_API_KEY: ${{ secrets.AMPLITUDE_API_KEY }}
      NEXT_PUBLIC_IDENTITY_API_URL: https://tr1afrar24.execute-api.eu-west-2.amazonaws.com/staging/blc_uk/organisation
      NEXT_PUBLIC_ELIGIBILITY_FORM_OUTPUT_API_URL: https://tr1afrar24.execute-api.eu-west-2.amazonaws.com/staging/blc_uk/formOutputData
      NEXT_PUBLIC_OFFERS_ENDPOINT: https://w6cu72lyfngylgfvgjla66levi.appsync-api.eu-west-2.amazonaws.com/graphql
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node_modules-${{hashFiles('package-lock.json')}}
          restore-keys: node_modules- # Take any latest cache if failed to find it for current yarn.lock
      - name: remove mock login
        run: rm -rf packages/web/src/pages/mock-login.tsx
      - run: npm install
      - name: Build
        run: NEXT_PUBLIC_APP_BRAND=${{matrix.brand}} npm run build -w packages/web
      - name: Publish
        uses: cloudflare/pages-action@1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{matrix.brand}}
          directory: packages/web/dist
          branch: 'staging'
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

  release:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && needs.changelog.outputs.releases_created
    name: Deploy Production
    strategy:
      matrix:
        brand: ['blc-uk', 'blc-au', 'dds-uk']
    environment: Production
    runs-on: ubuntu-latest
    needs:
      - test
      - changelog
      - staging
    env:
      NEXT_PUBLIC_AMPLITUDE_API_KEY: ${{ secrets.AMPLITUDE_API_KEY }}
      NEXT_PUBLIC_IDENTITY_API_URL: https://ue8dcieh75.execute-api.eu-west-2.amazonaws.com/production/blc_uk/organisation
      NEXT_PUBLIC_ELIGIBILITY_FORM_OUTPUT_API_URL: https://ue8dcieh75.execute-api.eu-west-2.amazonaws.com/production/blc_uk/formOutputData
      NEXT_PUBLIC_OFFERS_ENDPOINT: https://27d2m22mtvac5cvilrvb7kviyi.appsync-api.eu-west-2.amazonaws.com/graphql
    steps:
      - uses: actions/checkout@v4
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node_modules-${{hashFiles('package-lock.json')}}
          restore-keys: node_modules- # Take any latest cache if failed to find it for current yarn.lock
      - run: npm install
      - name: remove mock login
        run: rm -rf packages/web/src/pages/mock-login.tsx
      - name: Build
        run: NEXT_PUBLIC_APP_BRAND=${{matrix.brand}} npm run build -w packages/web
      - name: Publish
        uses: cloudflare/pages-action@1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{matrix.brand}}
          branch: 'main'
          directory: packages/web/dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
