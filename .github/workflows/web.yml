name: 'Web'
on:
  push:
    branches:
      - main
    paths:
      - packages/web/**
      - package-lock.json
      - .github/workflows/web.yml
  pull_request:
    paths:
      - packages/web/**
      - package-lock.json
      - .github/workflows/web.yml

env:
  FEATURE_FLAG_ENVIRONMENT_ID: ${{ vars.FEATURE_FLAG_ENVIRONMENT_ID }}

jobs:
  changes:
    name: Changes
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    outputs:
      components: ${{ steps.filter.outputs.components }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            components:
              - 'packages/web/src/common/components/**'
  # Run all unit tests on merge to main
  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - uses: bahmutov/npm-install@v1
      - run: npm test -w packages/web

  lint:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - uses: bahmutov/npm-install@v1
      - name: JavaScript and Typescript
        run: npm run lint -w packages/web
      - name: Styles
        run: npm run lint:style -w packages/web

  # Deploy component library to chromatic
  deploy_storybook:
    # only run on PR and if there are component library changes
    if: github.event_name == 'pull_request' && needs.changes.outputs.components == 'true'
    name: Deploy Storybook
    runs-on: ubuntu-latest
    needs:
      - changes
      - test
      - lint
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: bahmutov/npm-install@v1
      - uses: chromaui/action@v1
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          workingDir: packages/web
          exitZeroOnChanges: false
          onlyChanged: true

  changelog:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    name: Changelog
    runs-on: ubuntu-latest
    outputs:
      releases_created: ${{ steps.tag-release.outputs.releases_created }}
    steps:
      - uses: GoogleCloudPlatform/release-please-action@v3
        id: tag-release
        with:
          path: packages/web
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: node
          monorepo-tags: true
          package-name: bluelightcard/web
          changelog-types: '[{"type":"feat","section":"Features","hidden":false},{"type":"fix","section":"Bug Fixes","hidden":false},{"type":"chore","section":"Other Changes","hidden":false},{"type":"refactor","section":"Other Changes","hidden":false}]'

  # TODO - Feels a bit too repetitive, could do with templating this better so deployment jobs are more condense and less repetitive
  staging-blcuk:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    name: Deploy BLC UK Staging
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    needs:
      - test
      - lint
      - changelog
    steps:
      - uses: actions/checkout@v3
      - uses: bahmutov/npm-install@v1
      - name: Build
        run: NEXT_PUBLIC_APP_BRAND=blc npm run build -w packages/web
      - name: Publish
        uses: cloudflare/pages-action@1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: 'blc-uk'
          directory: packages/web/dist
          branch: 'staging'
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

  staging-blcaus:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    name: Deploy BLC AUS Staging
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    needs:
      - test
      - lint
      - changelog
    steps:
      - uses: actions/checkout@v3
      - uses: bahmutov/npm-install@v1
      - name: Build
        run: NEXT_PUBLIC_APP_BRAND=blc npm run build -w packages/web
      - name: Publish
        uses: cloudflare/pages-action@1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: 'blc-aus'
          directory: packages/web/dist
          branch: 'staging'
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

  staging-dds:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    name: Deploy DDS Staging
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    needs:
      - test
      - lint
      - changelog
    steps:
      - uses: actions/checkout@v3
      - uses: bahmutov/npm-install@v1
      - name: Build
        run: NEXT_PUBLIC_APP_BRAND=dds npm run build -w packages/web
      - name: Publish
        uses: cloudflare/pages-action@1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: 'dds'
          directory: packages/web/dist
          branch: 'staging'
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

  release-blcuk:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && needs.release_candidate.outputs.releases_created
    name: Release BLC UK
    environment: Production
    runs-on: ubuntu-latest
    needs:
      - test
      - changelog
      - staging-blcuk
      - staging-blcaus
      - staging-dds
    steps:
      - uses: actions/checkout@v3
      - uses: bahmutov/npm-install@v1
      - name: Build
        run: NEXT_PUBLIC_APP_BRAND=blc npm run build -w packages/web
      - name: Publish
        uses: cloudflare/pages-action@1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: 'blc-uk'
          directory: packages/web/dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

  release-blcaus:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && needs.release_candidate.outputs.releases_created
    name: Release BLC AU
    environment: Production
    runs-on: ubuntu-latest
    needs:
      - test
      - changelog
      - staging-blcuk
      - staging-blcaus
      - staging-dds
    steps:
      - uses: actions/checkout@v3
      - uses: bahmutov/npm-install@v1
      - name: Build
        run: NEXT_PUBLIC_APP_BRAND=blc npm run build -w packages/web
      - name: Publish
        uses: cloudflare/pages-action@1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: 'blc-au'
          directory: packages/web/dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

  release-dds:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && needs.release_candidate.outputs.releases_created
    name: Release DDS
    environment: Production
    runs-on: ubuntu-latest
    needs:
      - test
      - changelog
      - staging-blcuk
      - staging-blcaus
      - staging-dds
    steps:
      - uses: actions/checkout@v3
      - uses: bahmutov/npm-install@v1
      - name: Build
        run: NEXT_PUBLIC_APP_BRAND=dds npm run build -w packages/web
      - name: Publish
        uses: cloudflare/pages-action@1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: 'blc-dds'
          directory: packages/web/dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}


